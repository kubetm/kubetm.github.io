<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>KubeTM Blog – - 기초 다지기</title>
    <link>https://kubetm.github.io/k8s/02-beginner/</link>
    <description>Recent content in - 기초 다지기 on KubeTM Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 02 Aug 2021 00:00:00 +0000</lastBuildDate>
    
	  <atom:link href="https://kubetm.github.io/k8s/02-beginner/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>K8s: Getting-Started Kubernetes!</title>
      <link>https://kubetm.github.io/k8s/02-beginner/gettingstarted/</link>
      <pubDate>Mon, 02 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/k8s/02-beginner/gettingstarted/</guid>
      <description>
        
        
        &lt;div class=&#34;mx-auto&#34;&gt;
	&lt;a class=&#34;btn btn-lg btn-secondary mr-3 mb-4&#34; href=&#34;https://kubetm.github.io/documents/beginner/Getting_Started3.pdf&#34; download&gt;
		강의자료 PDF &lt;i class=&#34;fas fa-download ml-2&#34;&gt;&lt;/i&gt;
	&lt;/a&gt;
&lt;/div&gt;
&lt;figure&gt;
  &lt;img src=&#34;https://kubetm.github.io/img/practice/beginner/Getting started Kubernetes.jpg&#34;
       alt=&#34;Getting started Kubernetes&#34;
       class=&#34;mt-3 mb-3 border border-info rounded&#34; /&gt;
&lt;/figure&gt;


&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;실습 참고사항&lt;/h4&gt;

    이 실습 강의의 목적은 일반 서버와 도커, 그리고 쿠버네티스 환경의 차이점에 대해 대략적인 흐름을 이해하기 위함입니다.
그렇기 때문에 강의를 위한 별도의 사전 구축 내용들은 설명되지 않았고, 이후 쿠버네티스를 설치하고 [기초편]부터 실습을 진행하시면 되세요.
하지만 기존에 도커를 잘 아시는 분께서는 자신의 환경에 마춰 실습해 보셔도 무관합니다.

&lt;/div&gt;

&lt;br/&gt;
&lt;br/&gt;
&lt;h2 id=&#34;1-linux&#34;&gt;1. Linux&lt;/h2&gt;
&lt;hr&gt;
&lt;figure&gt;
  &lt;img src=&#34;https://kubetm.github.io/img/practice/beginner/Getting started Hello World on Linux.jpg&#34;
       alt=&#34;Getting started Hello World on Linux.&#34;
       class=&#34;mt-3 mb-3 border border-info rounded&#34; /&gt;
&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;CentOS에 nodejs 설치 :&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;yum install epel-release
yum -y install nodejs
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;1-1-hellojs&#34;&gt;1-1) hello.js&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;http&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;require&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;http&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;content&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;req&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;resp&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
 &lt;span style=&#34;color:#000&#34;&gt;resp&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;end&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Hello Kubernetes!&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
 &lt;span style=&#34;color:#000&#34;&gt;resp&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;writeHead&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;200&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;w&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;http&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;createServer&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;w&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;listen&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;8000&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;node hello.js
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br/&gt;
&lt;br/&gt;
&lt;h2 id=&#34;2-docker&#34;&gt;2. Docker&lt;/h2&gt;
&lt;hr&gt;
&lt;figure&gt;
  &lt;img src=&#34;https://kubetm.github.io/img/practice/beginner/Getting started Hello World on Docker.jpg&#34;
       alt=&#34;Getting started Hello World on Linux.&#34;
       class=&#34;mt-3 mb-3 border border-info rounded&#34; /&gt;
&lt;/figure&gt;
&lt;h3 id=&#34;2-1-dockerfile&#34;&gt;2-1) Dockerfile&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;FROM node:slim
EXPOSE &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;8000&lt;/span&gt;
COPY hello.js .
CMD node hello.js
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;2-2-docker-hub-site&#34;&gt;2-2) Docker Hub Site&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://hub.docker.com/&#34;&gt;https://hub.docker.com/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;2-3-docker-container-run&#34;&gt;2-3) Docker Container Run&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;docker build -t kubetm/hello .
-t : 레파지토리/이미지명:버전

docker images
docker run -d -p 8100:8000 kubetm/hello
-d : 백그라운드 모드
-p : 포트변경

docker ps
docker &lt;span style=&#34;color:#204a87&#34;&gt;exec&lt;/span&gt; -it c403442e8a59 /bin/bash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;2-4-docker-image-push&#34;&gt;2-4) Docker Image Push&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;docker login
docker push kubetm/hello
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;실습 참고사항&lt;/h4&gt;

    Image Push는 자신의 docker hub 계정이 있어야 실습 가능한 부분입니다. kubetm를 자신의 계정으로 변경해야합니다.

&lt;/div&gt;

&lt;br/&gt;
&lt;br/&gt;
&lt;h2 id=&#34;3-kubernetes&#34;&gt;3. Kubernetes&lt;/h2&gt;
&lt;hr&gt;
&lt;figure&gt;
  &lt;img src=&#34;https://kubetm.github.io/img/practice/beginner/Getting started Hello World on Kubernetes.jpg&#34;
       alt=&#34;Getting started Hello World on Kubernetes.&#34;
       class=&#34;mt-3 mb-3 border border-info rounded&#34; /&gt;
&lt;/figure&gt;
&lt;h3 id=&#34;3-1-pod&#34;&gt;3-1) Pod&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;apiVersion&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;v1&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;kind&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Pod&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;metadata&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;hello-pod&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;labels&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;app&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;hello&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;spec&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;containers&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;- &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;hello-container&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;image&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;kubetm/hello&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ports&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;- &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;containerPort&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;8000&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;3-2-service&#34;&gt;3-2) Service&lt;/h3&gt;



































&lt;ul class=&#34;nav nav-tabs&#34; id=&#34;tabs-2&#34; role=&#34;tablist&#34;&gt;&lt;li class=&#34;nav-item&#34;&gt;
      &lt;a class=&#34;nav-link active&#34;
        id=&#34;tabs-2-0-tab&#34; data-toggle=&#34;tab&#34; href=&#34;#tabs-2-0&#34; role=&#34;tab&#34;
        aria-controls=&#34;tabs-2-0&#34; aria-selected=&#34;true&#34;&gt;
        v1.27
      &lt;/a&gt;
    &lt;/li&gt;&lt;li class=&#34;nav-item&#34;&gt;
      &lt;a class=&#34;nav-link&#34;
        id=&#34;tabs-2-1-tab&#34; data-toggle=&#34;tab&#34; href=&#34;#tabs-2-1&#34; role=&#34;tab&#34;
        aria-controls=&#34;tabs-2-1&#34; aria-selected=&#34;false&#34;&gt;
        v1.15
      &lt;/a&gt;
    &lt;/li&gt;&lt;/ul&gt;


&lt;div class=&#34;tab-content&#34; id=&#34;tabs-2-content&#34;&gt;&lt;div class=&#34;tab-pane fade show active&#34;
        id=&#34;tabs-2-0&#34; role=&#34;tabpanel&#34; aria-labelled-by=&#34;tabs-2-0-tab&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;apiVersion: v1
kind: Service
metadata:
  name: hello-svc
spec:
  selector:
    app: hello
  ports:
    - port: &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;8200&lt;/span&gt;
      targetPort: &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;8000&lt;/span&gt;
  externalIPs:
  - 192.168.56.30&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
  &lt;div class=&#34;tab-pane fade&#34;
        id=&#34;tabs-2-1&#34; role=&#34;tabpanel&#34; aria-labelled-by=&#34;tabs-2-1-tab&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;apiVersion: v1
kind: Service
metadata:
  name: hello-svc
spec:
  selector:
    app: hello
  ports:
    - port: &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;8200&lt;/span&gt;
      targetPort: &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;8000&lt;/span&gt;
  externalIPs:
  - 192.168.0.30&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
  
&lt;/div&gt;


      </description>
    </item>
    
    <item>
      <title>K8s: k8s v1.15버전 설치 (실습 강의 버전)</title>
      <link>https://kubetm.github.io/k8s/02-beginner/cluster-install-case2/</link>
      <pubDate>Mon, 02 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/k8s/02-beginner/cluster-install-case2/</guid>
      <description>
        
        
        &lt;div class=&#34;mx-auto&#34;&gt;
	&lt;a class=&#34;btn btn-lg btn-secondary mr-3 mb-4&#34; href=&#34;https://kubetm.github.io/documents/beginner/Kubernetes_Install2.pdf&#34; download&gt;
		강의자료 PDF &lt;i class=&#34;fas fa-download ml-2&#34;&gt;&lt;/i&gt;
	&lt;/a&gt;
&lt;/div&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;figure&gt;
  &lt;img src=&#34;https://kubetm.github.io/img/practice/install/Installation Network Case2 for Kubernetes.jpg&#34;
       alt=&#34;Installation Network Case2 for Kubernetes.&#34;
       class=&#34;mt-3 mb-3 border border-info rounded&#34; /&gt;
&lt;/figure&gt;
&lt;h2 id=&#34;1-1-install-virtualbox&#34;&gt;1-1) Install Virtualbox&lt;/h2&gt;
&lt;hr&gt;
&lt;h3 id=&#34;1-1-1-virtualbox-다운로드-및-설치&#34;&gt;1-1-1) virtualbox 다운로드 및 설치&lt;/h3&gt;
&lt;p&gt;[윈도우10 버전으로 진행] 아래 경로에서 [Windows hosts] 클릭 하여 다운로드 후 설치 (별다른 변경없이 Next만 함)
&lt;br/&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://www.virtualbox.org/wiki/Downloads&#34;&gt;https://www.virtualbox.org/wiki/Downloads&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;br/&gt;
&lt;p&gt;Mac 사용자 참고 URL
&lt;br/&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://www.virtualbox.org/wiki/Mac%20OS%20X%20build%20instructions&#34;&gt;https://www.virtualbox.org/wiki/Mac%20OS%20X%20build%20instructions&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;br/&gt;
&lt;h3 id=&#34;1-1-2-centos-download&#34;&gt;1-1-2) CentOS Download&lt;/h3&gt;
&lt;p&gt;아래 경로로 들어가서 원하는 경로에서 Minimal 버전의 파일 다운로드
&lt;br/&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;http://isoredirect.centos.org/centos/7/isos/x86_64/&#34;&gt;http://isoredirect.centos.org/centos/7/isos/x86_64/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;br/&gt;
&lt;h3 id=&#34;1-1-3-원격접속-툴-mobaxterm-설치&#34;&gt;1-1-3) 원격접속 툴 MobaXterm 설치&lt;/h3&gt;
&lt;p&gt;꼭 MobaXterm이 아닌 각자 편한 원격접속 툴을 사용하셔도 되세요.
&lt;br/&gt;
아래 예제는 MobaXterm를 설치하고 필요한 Host 등록 예제입니다.
&lt;br/&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://mobaxterm.mobatek.net/&#34;&gt;https://mobaxterm.mobatek.net/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;- &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;GET MOBAXTERM NOW&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt; 버튼 클릭
- Free 버전 &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;Download now&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;
- Installer editon 다운로드 및 실행
- Sessions &amp;gt; SSH &amp;gt; Remote host : 192.168.0.30 &amp;gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;Bookmark settings&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt; Session name : master-192.168.0.30 &amp;gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;ok&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;
- Sessions &amp;gt; SSH &amp;gt; Remote host : 192.168.0.31 &amp;gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;Bookmark settings&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt; Session name : node1-192.168.0.31 &amp;gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;ok&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;
- Sessions &amp;gt; SSH &amp;gt; Remote host : 192.168.0.32 &amp;gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;Bookmark settings&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt; Session name : node2-192.168.0.32 &amp;gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;ok&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br/&gt;
&lt;br/&gt;
&lt;figure&gt;
  &lt;img src=&#34;https://kubetm.github.io/img/practice/appendix/Create VM for Kubernetes.jpg&#34;
       alt=&#34;Create VM for Kubernetes.&#34;
       class=&#34;mt-3 mb-3 border border-info rounded&#34; /&gt;
&lt;/figure&gt;
&lt;h2 id=&#34;2-1-setting-vm&#34;&gt;2-1) Setting VM&lt;/h2&gt;
&lt;hr&gt;
&lt;h3 id=&#34;2-1-1-vm-스펙-설정&#34;&gt;2-1-1) VM 스펙 설정&lt;/h3&gt;
&lt;p&gt;메모리 및 디스크는 각자 상황에 맞게 참고해서 VM 설정&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;1. &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;VM 생성 1단계&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt; 머신 &amp;gt; 새로 만들기 클릭
2. &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;VM 생성 1단계&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt; 이름 : k8s-master, 종류: Linux, 버전: Other Linux&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;64-bit&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
3. &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;VM 생성 2단계&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt; 메모리 : &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4096&lt;/span&gt; MB
4. &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;VM 생성 3단계&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt; 하드디스크 : 지금 새 가상 하드 디스크 만들기 &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;VDI:VirtualBox 디크스 이미지, 동적할당, 150GB&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
5. &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;VM 생성 후 시스템 설정&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt; 프로세서 개수 : CPU 2개
6. &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;VM 생성 후 저장소 설정&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt; 컨트롤러:IDE 하위에 있는 광학드라이브 클릭 &amp;gt; CentOS 이미지 선택 후 확인
7. &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;VM 생성 후 네트워크 설정&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt; VM 선택 후 설정 버튼 클릭 &amp;gt; 네트워크 &amp;gt; 어댑터 &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt; 탭 &amp;gt; 다음에 연결됨 &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;어댑터에 브리지&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt; 선택
   - IP를 할당 받을 수 없는 경우  &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;NAT 네트워크&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt; 
8. 시작
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br/&gt;
&lt;br/&gt;
&lt;h2 id=&#34;2-2-install-centos&#34;&gt;2-2) Install CentOS&lt;/h2&gt;
&lt;hr&gt;
&lt;h3 id=&#34;2-2-1-centos-설치&#34;&gt;2-2-1) CentOS 설치&lt;/h3&gt;
&lt;p&gt;4번 단계에서 &lt;code&gt;8.8.8.8&lt;/code&gt;는 Google DNS입니다. 원하는 DNS 쓰셔도 되요.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;1. Test this media &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;amp;&lt;/span&gt; install CentOS &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;7&lt;/span&gt;
2. Language : 한국어 
3. Disk 설정 &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;시스템 &amp;gt; 설치 대상&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;
   - &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;기타 저장소 옵션 &amp;gt; 파티션 설정&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt; 파티션을 설정합니다. &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;체크&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt; 후 &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;완료&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;
   - 새로운 CentOS 설치 &amp;gt; 여기를 클릭하여 자동으로 생성합니다. &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;클릭&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;
   - /home &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;클릭&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt; 후 용량 5.12 GiB로 변경 &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;설정 업데이트 클릭&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;
   - / &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;클릭&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt; 후 &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;140&lt;/span&gt; GiB 변경 후 &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;설정 업데이트 클릭&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;
   - &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;완료&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;, &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;변경 사항 적용&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;
4. 네트워크 설정 &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;시스템 &amp;gt; 네트워크 및 호스트명 설정&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;
   - 호스트 이름: k8s-master &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;적용&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;
   - 이더넷 &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;설정&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;
      &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;일반&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt; 탭
      - 사용 가능하면 자동으로 이 네트워크에 연결 &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;체크&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;
      &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;IPv4 설정&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt; 탭
      - 방식: 수동으로 선택, 
      - &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;Add&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt; -&amp;gt; 주소: 192.168.0.30, 넷마스크 : 255.255.255.0, 게이트웨이: 192.168.0.1, DNS 서버 : 8.8.8.8
      - &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;저장&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;][&lt;/span&gt;완료&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;      
 5. 설치시작
6. &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;설정 &amp;gt; 사용자 설정&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt; ROOT 암호 설정 
7. 설치 완료 후 &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;재부팅&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br/&gt;
&lt;br/&gt;
&lt;figure&gt;
  &lt;img src=&#34;https://kubetm.github.io/img/practice/appendix/Docker, Kubernetes Installation.jpg&#34;
       alt=&#34;Docker, Kubernetes Installation.&#34;
       class=&#34;mt-3 mb-3 border border-info rounded&#34; /&gt;
&lt;/figure&gt;
&lt;h2 id=&#34;3-1-pre-setting&#34;&gt;3-1) Pre-Setting&lt;/h2&gt;
&lt;hr&gt;
&lt;h3 id=&#34;3-1-1-selinux-설정&#34;&gt;3-1-1) SELinux 설정&lt;/h3&gt;
&lt;p&gt;Ubuntu나 Debian등 다른 OS를 설치하시는 분들께서는 아래 경로에서 명령어 참고 바래요
&lt;br/&gt;
&lt;a href=&#34;https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/&#34;&gt;https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/&lt;/a&gt;
&lt;br/&gt;
&lt;a href=&#34;https://kubernetes.io/docs/setup/production-environment/container-runtimes/#docker&#34;&gt;https://kubernetes.io/docs/setup/production-environment/container-runtimes/#docker&lt;/a&gt;
&lt;br/&gt;
쿠버네티스가 Pod Network에 필요한 호스트 파일 시스템에 액세스가 가능하도록 하기 위해서 필요한 설정이예요
&lt;br/&gt;
아래 설정으로 SELinux을 permissive로 변경해야하고&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;setenforce &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;리부팅시 다시 원복되기 때문에 아래 명령을 통해서 영구적으로 변경 해야되요&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;sed -i &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;s/^SELINUX=enforcing$/SELINUX=permissive/&amp;#39;&lt;/span&gt; /etc/selinux/config
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;아래 명령어를 실행해서 &lt;code&gt;Current mode:permissive&lt;/code&gt; 내용 확인&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;sestatus
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br/&gt;
&lt;h3 id=&#34;3-1-2-방화벽-해제&#34;&gt;3-1-2) 방화벽 해제&lt;/h3&gt;
&lt;p&gt;firewalld 비활성화&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;systemctl stop firewalld &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; systemctl disable firewalld
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;NetworkManager 비활성화&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;systemctl stop NetworkManager &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; systemctl disable NetworkManager
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;3-1-3-swap-비활성화&#34;&gt;3-1-3) Swap 비활성화&lt;/h3&gt;
&lt;p&gt;Swap 사용에 관련해서는 많은 의견이 있어요.
&lt;br/&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/kubernetes/kubernetes/issues/53533&#34;&gt;https://github.com/kubernetes/kubernetes/issues/53533&lt;/a&gt;
&lt;br/&gt;
위 내용을 참고하셔서 swap 사용시의 고려해야할 점을 확인하시고 일단 여기선 사용하지 않도록 설정할께요.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;swapoff -a &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; sed -i &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;/ swap / s/^/#/&amp;#39;&lt;/span&gt; /etc/fstab
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;3-1-4-iptables-커널-옵션-활성화&#34;&gt;3-1-4) iptables 커널 옵션 활성화&lt;/h3&gt;
&lt;p&gt;RHEL이나 CentOS7 사용시 iptables가 무시되서 트래픽이 잘못 라우팅되는 문제가 발생한다고 하여 아래 설정이 추가되요&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;cat &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;lt;&amp;lt;EOF &amp;gt;  /etc/sysctl.d/k8s.conf
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;net.bridge.bridge-nf-call-ip6tables = 1
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;net.bridge.bridge-nf-call-iptables = 1
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;EOF&lt;/span&gt;
sysctl --system
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;3-1-5-쿠버네티스-yum-repository-설정&#34;&gt;3-1-5) 쿠버네티스 YUM Repository 설정&lt;/h3&gt;
&lt;p&gt;YUM에 대해서 좀더 상세한 내용이 궁금한 분께서는 아래 싸이트가 잘 정리되어 있는거 같아 링크 첨부했어요.
&lt;br/&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://www.lesstif.com/display/1STB/yum&#34;&gt;https://www.lesstif.com/display/1STB/yum&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;cat &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;lt;&amp;lt;EOF &amp;gt; /etc/yum.repos.d/kubernetes.repo
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;[kubernetes]
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;name=Kubernetes
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;enabled=1
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;gpgcheck=1
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;repo_gpgcheck=0
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;EOF&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;3-1-6-centos-update&#34;&gt;3-1-6) Centos Update&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;yum update -y 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;3-1-7-hosts-등록&#34;&gt;3-1-7) hosts 등록&lt;/h3&gt;
&lt;p&gt;계획된 master와 node의 호스트 이름과 IP를 모두 등록해주세요. 안하시면 추후 kubeadm init시 Host이름으로 IP를 찾을 수 없다고 에러가 나요.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;cat &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;lt;&amp;lt; EOF &amp;gt;&amp;gt; /etc/hosts
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;192.168.0.30 k8s-master
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;192.168.0.31 k8s-node1
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;192.168.0.32 k8s-node2
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;EOF&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br/&gt;
&lt;br/&gt;
&lt;h2 id=&#34;3-2-install&#34;&gt;3-2) Install&lt;/h2&gt;
&lt;hr&gt;
&lt;h3 id=&#34;3-2-1-docker-설치&#34;&gt;3-2-1) Docker 설치&lt;/h3&gt;
&lt;p&gt;도커 설치 전에 필요한 패키지 설치&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;yum install -y yum-utils device-mapper-persistent-data lvm2 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;도커 설치를 위한 저장소 를 설정&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;도커 패키지 설치&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;yum update -y &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; yum install -y docker-ce-18.06.2.ce
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;mkdir /etc/docker
cat &amp;gt; /etc/docker/daemon.json &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;lt;&amp;lt;EOF
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;{
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;  &amp;#34;exec-opts&amp;#34;: [&amp;#34;native.cgroupdriver=systemd&amp;#34;],
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;  &amp;#34;log-driver&amp;#34;: &amp;#34;json-file&amp;#34;,
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;  &amp;#34;log-opts&amp;#34;: {
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    &amp;#34;max-size&amp;#34;: &amp;#34;100m&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;  },
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;  &amp;#34;storage-driver&amp;#34;: &amp;#34;overlay2&amp;#34;,
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;  &amp;#34;storage-opts&amp;#34;: [
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    &amp;#34;overlay2.override_kernel_check=true&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;  ]
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;}
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;EOF&lt;/span&gt;

mkdir -p /etc/systemd/system/docker.service.d
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;3-2-2-kubernetes-설치&#34;&gt;3-2-2) Kubernetes 설치&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;yum install -y --disableexcludes&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;kubernetes kubeadm-1.15.5-0.x86_64 kubectl-1.15.5-0.x86_64 kubelet-1.15.5-0.x86_64
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br/&gt;
&lt;br/&gt;
&lt;figure&gt;
  &lt;img src=&#34;https://kubetm.github.io/img/practice/appendix/Clone VM on Node For Kubernetes.jpg&#34;
       alt=&#34;Clone VM on Node For Kubernetes.&#34;
       class=&#34;mt-3 mb-3 border border-info rounded&#34; /&gt;
&lt;/figure&gt;
&lt;h2 id=&#34;4-1-clone-vm&#34;&gt;4-1) Clone VM&lt;/h2&gt;
&lt;hr&gt;
&lt;h3 id=&#34;4-1-1-시스템-shutdown&#34;&gt;4-1-1) 시스템 shutdown&lt;/h3&gt;
&lt;p&gt;여기까지 만든 이미지를 복사해 놓기 위해서 Master를 잠시 Shutdown 시켜요.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;shutdown now
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;4-1-2-vm-복사&#34;&gt;4-1-2) VM 복사&lt;/h3&gt;
&lt;p&gt;VirtualBox UI를 통해 Master 선택 후 마우스 우클릭을 해서 [복제] 버튼 클릭&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;1. 이름 : k8s-node1, MAC 주소정책 : 모든 네트워크 어댑터의 새 MAC 주소 생성
2. 복제방식 : 완전한 복제
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;node2도 반복&lt;/p&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;h2 id=&#34;4-2-config-node&#34;&gt;4-2) Config Node&lt;/h2&gt;
&lt;hr&gt;
&lt;h3 id=&#34;4-2-1-network-변경하기&#34;&gt;4-2-1) Network 변경하기&lt;/h3&gt;
&lt;p&gt;VirtualBox UI에서 k8s-node1을 시작 시키면 뜨는 Console 창을 통해 아래 명령어 입력
&lt;br/&gt;
Host의 Ip Address를 변경하기 위해 아래 명령어로 설정을 열고&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;vi /etc/sysconfig/network-scripts/ifcfg-eth0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;IPADDR=&lt;/code&gt; 부분을 해당 Node의 IP (192.168.0.31)로 변경해주세요&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;...
&lt;span style=&#34;color:#000&#34;&gt;DEVICE&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;etho0&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;ONBOOT&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;yes&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#000&#34;&gt;IPADDR&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;192.168.0.31&amp;#34;&lt;/span&gt;
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;그리고 아래 명령어로 네트워크 재시작&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;systemctl restart network
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;4-2-2-host-name-변경&#34;&gt;4-2-2) Host Name 변경&lt;/h3&gt;
&lt;p&gt;해당 Node의 Host 이름을 변경해주세요&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;hostnamectl set-hostname k8s-node1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;이와 같은 방식으로 k8s-node2(192.168.0.32) 도 설정합니다.&lt;/p&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;figure&gt;
  &lt;img src=&#34;https://kubetm.github.io/img/practice/appendix/Initialize Master and Join Node for Kubernetes.jpg&#34;
       alt=&#34;Initialize Master and Join Node for Kubernetes.&#34;
       class=&#34;mt-3 mb-3 border border-info rounded&#34; /&gt;
&lt;/figure&gt;
&lt;h2 id=&#34;5-1-master&#34;&gt;5-1) Master&lt;/h2&gt;
&lt;hr&gt;
&lt;h3 id=&#34;5-1-1-도커-및-쿠버네티스-실행&#34;&gt;5-1-1) 도커 및 쿠버네티스 실행&lt;/h3&gt;
&lt;p&gt;도커 실행&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;systemctl daemon-reload
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;systemctl &lt;span style=&#34;color:#204a87&#34;&gt;enable&lt;/span&gt; --now docker
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;아래 명령어를 입력하면 image를 다운받는 내용이 나오면서 중간에  &lt;code&gt;Hello for Docker!&lt;/code&gt; 가 보이면 설치 확인되면 설치가 잘 된거예요.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;docker run hello-world
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;쿠버네티스 실행&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;systemctl &lt;span style=&#34;color:#204a87&#34;&gt;enable&lt;/span&gt; --now kubelet
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;5-1-2-쿠버네티스-초기화-명령-실행&#34;&gt;5-1-2) 쿠버네티스 초기화 명령 실행&lt;/h3&gt;
&lt;p&gt;kubeadm init 명령관련 해서 상세 내용이 궁금하신 분은 아래 싸이트 참고하세요.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://kubernetes.io/docs/reference/setup-tools/kubeadm/kubeadm-init/&#34;&gt;https://kubernetes.io/docs/reference/setup-tools/kubeadm/kubeadm-init/&lt;/a&gt;
&lt;br/&gt;
&lt;code&gt;pod-network-cidr&lt;/code&gt; 를 설정하면 Pod의 IP가 자동으로 생성될때 해당 network으로 생성되요&lt;/p&gt;
&lt;/blockquote&gt;
&lt;br/&gt;
`service-cidr` 를 설정하면 Service의 IP가 자동으로 생성될때 해당 대역으로 생성되요 `Default: 10.96.0.0/12`
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;kubeadm init --pod-network-cidr&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;20.96.0.0/12 --apiserver-advertise-address&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;192.168.0.30
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;실행 후 &lt;code&gt;[Your Kubernetes master has initialized successfully!]&lt;/code&gt; 문구를 확인하고 아래 내용 복사해서 별도로 저장해 둡니다.
&lt;br/&gt;
kubeadm join 192.168.0.30:6443 &amp;ndash;token ki4szr.t3wondaclij6d1a3&lt;br&gt;
&amp;ndash;discovery-token-ca-cert-hash sha256:2370f0451342c6e4bd0d38f6c2511bda5c50374c85e9c09da28e12dd666d5987&lt;/p&gt;
&lt;h3 id=&#34;5-1-3-환경변수-설정&#34;&gt;5-1-3) 환경변수 설정&lt;/h3&gt;
&lt;p&gt;root 계정을 이용해서 kubectl을 실행하기 위한 환경 변수를 설정&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;mkdir -p &lt;span style=&#34;color:#000&#34;&gt;$HOME&lt;/span&gt;/.kube
sudo cp -i /etc/kubernetes/admin.conf &lt;span style=&#34;color:#000&#34;&gt;$HOME&lt;/span&gt;/.kube/config
sudo chown &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;$(&lt;/span&gt;id -u&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;)&lt;/span&gt;:&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;$(&lt;/span&gt;id -g&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$HOME&lt;/span&gt;/.kube/config
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;5-1-4-kubectl-자동완성-기능-설치&#34;&gt;5-1-4) kubectl 자동완성 기능 설치&lt;/h3&gt;
&lt;p&gt;kubectl 사용시 [tab] 버튼을 이용해서 다음에 올 명령어 리스트를 조회 할 수 있어요.
&lt;br/&gt;
명령 실행 후 바로 적용이 안되기 때문에 접속을 끊고 다시 연결 후에 사용 가능합니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;yum install bash-completion -y
&lt;span style=&#34;color:#204a87&#34;&gt;source&lt;/span&gt; &amp;lt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;kubectl completion bash&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#204a87&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;source &amp;lt;(kubectl completion bash)&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt; ~/.bashrc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;5-2-node&#34;&gt;5-2) Node&lt;/h2&gt;
&lt;hr&gt;
&lt;h3 id=&#34;5-2-1-도커-및-쿠버네티스-실행&#34;&gt;5-2-1) 도커 및 쿠버네티스 실행&lt;/h3&gt;
&lt;p&gt;도커 실행&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;systemctl daemon-reload
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;systemctl &lt;span style=&#34;color:#204a87&#34;&gt;enable&lt;/span&gt; --now docker
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;쿠버네티스 실행&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;systemctl &lt;span style=&#34;color:#204a87&#34;&gt;enable&lt;/span&gt; --now kubelet
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;5-2-2-node-연결&#34;&gt;5-2-2) Node 연결&lt;/h3&gt;
&lt;p&gt;Master Init 후 복사 했었던 내용 붙여넣기&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;kubeadm join 192.168.0.30:6443 --token 7xd747.bfouwf64kz437sqs &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;    --discovery-token-ca-cert-hash sha256:ec75641cd258f2930a7f73abfe540bb484eb295ad4500ccdaa166208f97c5117
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;5-2-3-node-연결-확인&#34;&gt;5-2-3) Node 연결 확인&lt;/h3&gt;
&lt;p&gt;Master 서버에 접속해서 아래 명령 입력 후 추가된 Node가 보이는지 확인 (Status는 NotReady)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;kubectl get nodes
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br/&gt;
&lt;br/&gt;
&lt;figure&gt;
  &lt;img src=&#34;https://kubetm.github.io/img/practice/appendix/Add Networking and Dashboard Plugin for Kubernetes.jpg&#34;
       alt=&#34;Add Networking and Dashboard Plugin for Kubernetes.&#34;
       class=&#34;mt-3 mb-3 border border-info rounded&#34; /&gt;
&lt;/figure&gt;
&lt;h2 id=&#34;6-1-networking&#34;&gt;6-1) Networking&lt;/h2&gt;
&lt;hr&gt;
&lt;h3 id=&#34;6-1-1-calico-설치&#34;&gt;6-1-1) Calico 설치&lt;/h3&gt;
&lt;p&gt;Kubernetes Cluster Networking에는 많은 Plugin들이 있는데 그중 Calico 설치에 대한 내용 입니다.
&lt;br/&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.projectcalico.org/v3.9/getting-started/kubernetes/&#34;&gt;https://docs.projectcalico.org/v3.9/getting-started/kubernetes/&lt;/a&gt;
&lt;br/&gt;
Calico는 기본 192.168.0.0/16 대역으로 설치가 되는데, 그럼  실제 VM이 사용하고 있는 대역대와 겹치기 때문에 수정을 해서 설치해야 할 경우&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;curl -O https://docs.projectcalico.org/v3.9/manifests/calico.yaml
sed s/192.168.0.0&lt;span style=&#34;color:#4e9a06&#34;&gt;\\&lt;/span&gt;/16/20.96.0.0&lt;span style=&#34;color:#4e9a06&#34;&gt;\\&lt;/span&gt;/12/g -i calico.yaml
kubectl apply -f calico.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;calico와 coredns 관련 Pod의 Status가 Running인지 확인&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;kubectl get pods --all-namespaces
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;6-2-dashboard&#34;&gt;6-2) Dashboard&lt;/h2&gt;
&lt;hr&gt;
&lt;h3 id=&#34;6-2-1-dashboard-설치&#34;&gt;6-2-1) Dashboard 설치&lt;/h3&gt;
&lt;p&gt;해당 설정은 교육목적으로 권한 설정을 모두 해제하는 방법이기 때문에 프로젝트에서 사용하실때는 이점 유의바래요
&lt;br/&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/kubernetes/dashboard&#34;&gt;https://github.com/kubernetes/dashboard&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;kubectl apply -f https://kubetm.github.io/documents/appendix/kubetm-dashboard-v1.10.1.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;6-2-2-백그라운드로-proxy-띄우기&#34;&gt;6-2-2) 백그라운드로 proxy 띄우기&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;--address&lt;/code&gt;에 자신의 Host IP 입력&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;nohup kubectl proxy --port&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;8001&lt;/span&gt; --address&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;192.168.0.30 --accept-hosts&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;^*$&amp;#39;&lt;/span&gt; &amp;gt;/dev/null 2&amp;gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;amp;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;만약 Master 노드가 Restart 됐을 경우 이 부분은 다시 실행해 줘야 합니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;6-2-3-접속-url&#34;&gt;6-2-3) 접속 URL&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;http://192.168.0.30:8001/api/v1/namespaces/kube-system/services/https:kubernetes-dashboard:/proxy/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;6-2-4-언어-설정변경&#34;&gt;6-2-4) 언어 설정변경&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;Chrome 설정 &amp;gt; 언어 &amp;gt; 언어&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;한국어&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt; &amp;gt; 원하는 언어를 위로 추가
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>K8s: k8s v1.27 버전 설치 (최신, 쉬운설치 버전) - 1.22에서 변경됨</title>
      <link>https://kubetm.github.io/k8s/02-beginner/cluster-install-case6/</link>
      <pubDate>Wed, 01 Nov 2023 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/k8s/02-beginner/cluster-install-case6/</guid>
      <description>
        
        
        &lt;div class=&#34;mx-auto&#34;&gt;
	&lt;a class=&#34;btn btn-lg btn-secondary mr-3 mb-4&#34; href=&#34;https://kubetm.github.io/documents/beginner/Kubernetes_Install6.pdf&#34; download&gt;
		강의자료 PDF &lt;i class=&#34;fas fa-download ml-2&#34;&gt;&lt;/i&gt;
	&lt;/a&gt;
&lt;/div&gt;


&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;동영상 녹음 이후 설치 스크립트 수정사항&lt;/h4&gt;

    &lt;ul&gt;
&lt;li&gt;Dashboard 버전 변경 : v2.2.0 -&amp;gt; v2.3.0 &lt;br/&gt;&lt;/li&gt;
&lt;li&gt;Worker Node명 변경 : k8s-worker1 -&amp;gt; k8s-node1, k8s-worker2 -&amp;gt; k8s-node2&lt;/li&gt;
&lt;li&gt;Kubernetes 버전 변경 : v1.22 -&amp;gt; v1.27&lt;/li&gt;
&lt;li&gt;Virtualbox 버전 변경 : 6.1.26 -&amp;gt; 7.0.8&lt;/li&gt;
&lt;li&gt;Vagrant 버전 변경 : 2.2.18 -&amp;gt; 2.3.4&lt;/li&gt;
&lt;/ul&gt;


&lt;/div&gt;

&lt;h2 id=&#34;설치-가이드&#34;&gt;설치 가이드&lt;/h2&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li&gt;XShell 설치 : 생성될 Master/Woker Node에 접속할 툴 (기존에 쓰고 있는게 있으면 생략가능)&lt;/li&gt;
&lt;li&gt;VirtualBox 설치 : VM 및 내부 네트워크 생성 툴&lt;/li&gt;
&lt;li&gt;Vagrant 설치 및 k8s 설치 스크립트 실행 : 자동으로 VirtualBox를 이용해 VM들을 생성하고, K8S관련 설치 파일들이 실행됨&lt;/li&gt;
&lt;li&gt;Worker Node 연결 : Worker Node들을 Master에 연결하여 쿠버네티스 클러스터 구축&lt;/li&gt;
&lt;li&gt;설치 확인 : Node와 Pod 상태 조회&lt;/li&gt;
&lt;li&gt;대시보드 접근 : Host OS에서 웹 브라우저를 이용해 클러스터 Dashboard에 접근&lt;/li&gt;
&lt;/ol&gt;
&lt;figure&gt;
  &lt;img src=&#34;https://kubetm.github.io/img/practice/install/Installation Step Case6 for Kubernetes.jpg&#34;
       alt=&#34;Installation Step Case6 for Kubernetes&#34;
       class=&#34;mt-3 mb-3 border border-info rounded&#34; /&gt;
&lt;/figure&gt;
&lt;br/&gt;
&lt;h3 id=&#34;1-xshell-설치&#34;&gt;1. XShell 설치&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;다운로드 url : &lt;a href=&#34;https://www.netsarang.com/en/free-for-home-school/&#34;&gt;https://www.netsarang.com/en/free-for-home-school/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;설치 후 k8s-master(192.168.56.30:22), k8s-node1(192.168.56.31:22), k8s-node2(192.168.56.32:22) IP 등록&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;br/&gt;
&lt;h3 id=&#34;2-virtualbox-설치-708-버전&#34;&gt;2. VirtualBox 설치 (7.0.8 버전)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Win 버전 : &lt;a href=&#34;https://download.virtualbox.org/virtualbox/7.0.8/VirtualBox-7.0.8-156879-Win.exe&#34;&gt;https://download.virtualbox.org/virtualbox/7.0.8/VirtualBox-7.0.8-156879-Win.exe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Mac 버전 : &lt;a href=&#34;https://download.virtualbox.org/virtualbox/7.0.8/VirtualBox-7.0.8-156879-OSX.dmg&#34;&gt;https://download.virtualbox.org/virtualbox/7.0.8/VirtualBox-7.0.8-156879-OSX.dmg&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Download site : &lt;a href=&#34;https://www.virtualbox.org/wiki/Downloads&#34;&gt;https://www.virtualbox.org/wiki/Downloads&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;FAQ : microsoft visual 관련 에러 해결방법 &lt;a href=&#34;https://cafe.naver.com/kubeops/25&#34;&gt;https://cafe.naver.com/kubeops/25&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;br/&gt;
&lt;h3 id=&#34;3-vagrant-설치-및-k8s-설치-스크립트-실행&#34;&gt;3. Vagrant 설치 및 k8s 설치 스크립트 실행&lt;/h3&gt;
&lt;p&gt;3-1) Vagrant 설치 (2.3.4 버전)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Win 버전 : &lt;a href=&#34;https://releases.hashicorp.com/vagrant/2.3.4/vagrant_2.3.4_windows_amd64.msi&#34;&gt;https://releases.hashicorp.com/vagrant/2.3.4/vagrant_2.3.4_windows_amd64.msi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Mac 버전 : &lt;a href=&#34;https://releases.hashicorp.com/vagrant/2.3.4/vagrant_2.3.4_darwin_amd64.dmg&#34;&gt;https://releases.hashicorp.com/vagrant/2.3.4/vagrant_2.3.4_darwin_amd64.dmg&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Download site : &lt;a href=&#34;https://developer.hashicorp.com/vagrant/downloads?product_intent=vagrant&#34;&gt;https://developer.hashicorp.com/vagrant/downloads?product_intent=vagrant&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;3-2) Vagrant 명령 실행&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;윈도우에서 cmd 실행 &lt;br/&gt;&lt;/li&gt;
&lt;li&gt;k8s 폴더 생성 및 이동 &lt;br/&gt;&lt;/li&gt;
&lt;li&gt;Vagrantfile 파일 다운로드&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;// 폴더 생성
C&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f57900&#34;&gt;\Users\사용자&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&amp;gt;mkdir k8s&lt;/span&gt;
C&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f57900&#34;&gt;\Users\사용자&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&amp;gt;cd k8s &lt;/span&gt;

// Vagrant 스크립트 다운로드
C&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f57900&#34;&gt;\Users\사용자\k8s&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&amp;gt; curl -O https://kubetm.github.io/yamls/k8s-install/Vagrantfile&lt;/span&gt;

// Rocky Linux Repo 세팅
C&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f57900&#34;&gt;\Users\사용자\k8s&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&amp;gt; curl -O https://raw.githubusercontent.com/k8s-1pro/install/main/ground/k8s-1.27/vagrant-2.3.4/rockylinux-repo.json&lt;/span&gt;
C&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f57900&#34;&gt;\Users\사용자\k8s&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&amp;gt; vagrant box add rockylinux-repo.json&lt;/span&gt;

// Vagrant Disk 설정 Plugin 설치 
C&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f57900&#34;&gt;\Users\사용자\k8s&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&amp;gt; vagrant plugin install vagrant-vbguest vagrant-disksize&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Vagrant 실행 (5~10분 소요)&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;C&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f57900&#34;&gt;\Users\사용자\k8s&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&amp;gt; vagrant up&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;vagrant 명령어 참고&lt;/h4&gt;

    vagrant up : VM 생성 및 스크립트 설치 &lt;br/&gt;
(최초 VM생성 할때만 사용 합니다. 생성 이후 부터 VM 기동/중지는 Virtualbox UI를 사용하는걸 권해 드려요.) &lt;br/&gt;
vagrant destroy : 가상머신 삭제 &lt;br/&gt;
(vagrant up으로 VM 생성 중 에러가 났을 때 이 명령으로 삭제 합니다.)

&lt;/div&gt;

&lt;br/&gt;
&lt;h3 id=&#34;4-worker-node-연결&#34;&gt;4. Worker Node 연결&lt;/h3&gt;
&lt;p&gt;4-1) XShell을 통해 master 접속 (id/pw: root/vagrant) &lt;br/&gt;
4-2) cat 명령으로 자신에 master 접근 token 확인 및 복사&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-ssh&#34; data-lang=&#34;ssh&#34;&gt;[root@k8s-master ~]# cat ~/join.sh
kubeadm join 192.168.56.30:6443 --token bver73.wda72kx4afiuhspo --discovery-token-ca-cert-hash sha256:7205b3fd6030e47b74aa11451221ff3c77daa0305aad0bc4a2d3196e69eb42b7
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;4-3) worker node1 접속 후 토큰 붙여놓기 (id/pw: root/vagrant) &lt;br/&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-ssh&#34; data-lang=&#34;ssh&#34;&gt;[root@k8s-node1 ~]# kubeadm join 192.168.56.30:6443 --token bver73.wda72kx4afiuhspo --discovery-token-ca-cert-hash sha256:7205b3fd6030e47b74aa11451221ff3c77daa0305aad0bc4a2d3196e69eb42b7
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;4-4) worker node2 접속 후 토큰 붙여놓기 반복&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-ssh&#34; data-lang=&#34;ssh&#34;&gt;[root@k8s-node2 ~]# kubeadm join 192.168.56.30:6443 --token bver73.wda72kx4afiuhspo --discovery-token-ca-cert-hash sha256:7205b3fd6030e47b74aa11451221ff3c77daa0305aad0bc4a2d3196e69eb42b7
&lt;/code&gt;&lt;/pre&gt;&lt;br/&gt;
&lt;h3 id=&#34;5-설치-확인&#34;&gt;5. 설치 확인&lt;/h3&gt;
&lt;p&gt;5-1) XShell을 통해 master 접속 (id/pw = root/vagrant) &lt;br/&gt;
5-2) kubectl 명령어&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-ssh&#34; data-lang=&#34;ssh&#34;&gt;[root@k8s-master ~]# kubectl get pod -A
[root@k8s-master ~]# kubectl get nodes
&lt;/code&gt;&lt;/pre&gt;&lt;br/&gt;
&lt;h3 id=&#34;6-대시보드-접근&#34;&gt;6. 대시보드 접근&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-ssh&#34; data-lang=&#34;ssh&#34;&gt;https://192.168.56.30:30000/#/login
&lt;/code&gt;&lt;/pre&gt;&lt;br/&gt;
&lt;br/&gt;
&lt;h2 id=&#34;참고&#34;&gt;참고&lt;/h2&gt;
&lt;h3 id=&#34;version-정보&#34;&gt;Version 정보&lt;/h3&gt;
&lt;figure&gt;
  &lt;img src=&#34;https://kubetm.github.io/img/practice/install/Installation Step Case6 for Kubernetes Update.jpg&#34;
       alt=&#34;Installation Version Case6 for Kubernetes Update&#34;
       class=&#34;mt-3 mb-3 border border-info rounded&#34; /&gt;
&lt;/figure&gt;
&lt;h3 id=&#34;network-구성도&#34;&gt;Network 구성도&lt;/h3&gt;
&lt;figure&gt;
  &lt;img src=&#34;https://kubetm.github.io/img/practice/install/Installation Network Case6 for Kubernetes.jpg&#34;
       alt=&#34;Installation Network Case6 for Kubernetes&#34;
       class=&#34;mt-3 mb-3 border border-info rounded&#34; /&gt;
&lt;/figure&gt;
&lt;h2 id=&#34;qna&#34;&gt;QnA&lt;/h2&gt;
&lt;h3 id=&#34;vagrnat-up-시-vm기동이-안될경우&#34;&gt;vagrnat up 시 VM기동이 안될경우&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;에러 메세지&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-ssh&#34; data-lang=&#34;ssh&#34;&gt;There was an error while executing `VBoxManage`, a CLI used by Vagrant
for controlling VirtualBox. The command and stderr is shown below.

Command: [&amp;quot;startvm&amp;quot;, &amp;quot;8a9490a5-bbe4-4bac-9043-de39b93cf6b3&amp;quot;, &amp;quot;--type&amp;quot;, &amp;quot;headless&amp;quot;]

Stderr: VBoxManage.exe: error: The VM session was closed before any attempt to power it on
VBoxManage.exe: error: Details: code E_FAIL (0x80004005), component SessionMachine, interface ISession
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;해결방법 : 작업관리자에 들어가서 VirtualBox 관련 프로세스 모두 죽이고 다시 실행 (VirtualBox Headless Frontend, VirtualBox Interface)&lt;/li&gt;
&lt;li&gt;추가 커맨트 : 생각보다 자주 이런 현상이 발생하는것 같아요. 설치만 vagrant로하고 이후부터는 vagrant up으로 기동하지 않고, 그냥 virtualbox만 실행해서 UI를 통해 기동시키고 내리는것도 괜찮을것 같습니다. 이때 주의할 점은, virtualbox를 통해 core수나 memory를 직접 변경 했을때 나중에 vagrant up으로 기동할일이 있을 경우 Vagrantfile에 있는 core, memory 스펙으로 다시 업데이트 된다는 점 주의하시기 바랍니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;dashboard-관련--127-버전에서는-불필요한-내용입니다&#34;&gt;Dashboard 관련  (1.27 버전에서는 불필요한 내용입니다.)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Master Node 재기동시 Dashboard에 접속하기 위해선 아래 명령어를 실행해서 Proxy 오픈하기&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-ssh&#34; data-lang=&#34;ssh&#34;&gt;[root@k8s-master ~]# nohup kubectl proxy --port=8001 --address=192.168.56.30 --accept-hosts=&#39;^*$&#39; &amp;gt;/dev/null 2&amp;gt;&amp;amp;1 &amp;amp;
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;Dashboard 접근시 ServiceUnavailable 에러 발생시 아래 명령을 통해 기동안된 Pod 확인&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-ssh&#34; data-lang=&#34;ssh&#34;&gt;[root@k8s-master ~]# kubectl get pods -A
&lt;/code&gt;&lt;/pre&gt;
      </description>
    </item>
    
    <item>
      <title>K8s: k8s v1.27 버전 설치 (최신, 쉬운설치 버전)</title>
      <link>https://kubetm.github.io/k8s/02-beginner/cluster-install-case7/</link>
      <pubDate>Sat, 25 Nov 2023 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/k8s/02-beginner/cluster-install-case7/</guid>
      <description>
        
        
        &lt;div class=&#34;mx-auto&#34;&gt;
	&lt;a class=&#34;btn btn-lg btn-secondary mr-3 mb-4&#34; href=&#34;https://kubetm.github.io/documents/beginner/Kubernetes_Install6.pdf&#34; download&gt;
		강의자료 PDF &lt;i class=&#34;fas fa-download ml-2&#34;&gt;&lt;/i&gt;
	&lt;/a&gt;
&lt;/div&gt;


&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;동영상 녹음 이후 설치 스크립트 수정사항&lt;/h4&gt;

    &lt;ul&gt;
&lt;li&gt;Dashboard 버전 변경 : v2.2.0 -&amp;gt; v2.3.0 &lt;br/&gt;&lt;/li&gt;
&lt;li&gt;Worker Node명 변경 : k8s-worker1 -&amp;gt; k8s-node1, k8s-worker2 -&amp;gt; k8s-node2&lt;/li&gt;
&lt;li&gt;Kubernetes 버전 변경 : v1.22 -&amp;gt; v1.27&lt;/li&gt;
&lt;li&gt;Virtualbox 버전 변경 : 사용안함&lt;/li&gt;
&lt;li&gt;Vagrant 버전 변경 : 사용안함&lt;/li&gt;
&lt;/ul&gt;


&lt;/div&gt;

&lt;h2 id=&#34;설치-가이드&#34;&gt;설치 가이드&lt;/h2&gt;
&lt;hr&gt;
&lt;figure&gt;
  &lt;img src=&#34;https://kubetm.github.io/img/practice/install/Installation Step Case7 for Kubernetes - mac.jpg&#34;
       alt=&#34;Installation Step Case7 for Kubernetes - mac&#34;
       class=&#34;mt-3 mb-3 border border-info rounded&#34; /&gt;
&lt;/figure&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;h3 id=&#34;1-rocky-linux-iso-다운로드-92-arm64-버전&#34;&gt;1. Rocky Linux ISO 다운로드 (9.2 arm64 버전)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Download : &lt;a href=&#34;https://dl.rockylinux.org/vault/rocky/9.2/isos/aarch64/Rocky-9.2-aarch64-minimal.iso&#34;&gt;https://dl.rockylinux.org/vault/rocky/9.2/isos/aarch64/Rocky-9.2-aarch64-minimal.iso&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Site : &lt;a href=&#34;https://rockylinux.org&#34;&gt;https://rockylinux.org&lt;/a&gt;
&lt;br/&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-utm-다운로드-및-설치-444-버전&#34;&gt;2. UTM 다운로드 및 설치 (4.4.4 버전)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Download : &lt;a href=&#34;https://github.com/utmapp/UTM/releases/download/v4.4.4/UTM.dmg&#34;&gt;https://github.com/utmapp/UTM/releases/download/v4.4.4/UTM.dmg&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Site : &lt;a href=&#34;https://mac.getutm.app&#34;&gt;https://mac.getutm.app&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-master-vm-세팅&#34;&gt;3. Master VM 세팅&lt;/h3&gt;
&lt;p&gt;3-1) UTM에서 VM 생성&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Create a New Virtual Machine 선택&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;- Start : Virtualize
- Operating System : Linux
- Linux : Boot ISO Image [Browse..] -&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt; Rocky ISO 파일 선택
- Hardware : Memory : 4096 MB, CPU Cores : 4
- Size : 24 GB
- Shared Directory : 설정 안함
- Summary : Name : k8s-master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Virtualize와 Emulate의 차이&lt;/h4&gt;

    Virtualize으로 설치시 M1이 arm 기반이기 때문에, OS와 쿠버네티스도 arm 기반으로 설치를 해야 합니다. 그래도 이렇게 설치해야 속도가 빠르고요. Emulate 방식으로 설치할 경우 amd기반으로도 설치가 가능합니다. (단, 속도가 느립니다)

&lt;/div&gt;

&lt;p&gt;3-2) 생성된 VM 실행 후 Rocky Linux 초기 세팅&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;1. 언어 : 한국어(대한민국)
2. 사용자 설정 
   - root 비밀번호(R) : 개인별 root 비밀번호 입력
   - root 계정을 잠금 - 체크해제
   - root가 비밀번호로 SSH 로그인하도록 허용 - 체크 
3. 설치 목적지 (D)
   - 저장소 구성 : 자동 설정(A) [체크] 확인 후 완료(D) 클릭
4. 네트워크 및 호스트 이름
    - 호스트 이름(H) : k8s-master  입력 후 [적용(A)] 클릭
    - 이더넷(enp0s1) : [설정(C)..] 클릭
       1) [IPv4 설정] 탭 클릭
       2) Method : 수동
       3) 주소 : [Add] 클릭 후 -&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt; 주소(192.168.64.30), 넷마스크(255.255.255.0), 게이트웨이(192.168.64.1)
       4) DNS servers: 192.168.64.1
    - [완료(D)] 클릭
5. [설치 시작(B)] 클릭
6. 설치 완료 메세지 확인 후 [재시작]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;3-3) Rocky Linux 실행&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CD/DVD에 ISO 이미지가 있기 때문에 LINUX 설치를 하라고 나옴&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;1. UTM 화면 가장 하단에 CD/DVD를 클릭해서 Clear 클릭 (선택되어 있는 ISO이미지가 제거됨)
2. Install Rokcy Linux 9.2 대기중인 화면 상단에서 [전원버튼] 눌러서 Shutdown 하고, [▶] 버튼 눌러서 다시 VM 기동하기
3. UTM에서 제공되는 콘솔창은 내리기 (copy&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;amp;&lt;/span&gt;paste 가 잘안됨)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;4-원격-접속-mac-터미널-사용&#34;&gt;4. 원격 접속 (Mac 터미널 사용)&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;$ ssh root@192.168.64.30

The authenticity of host &amp;#39;192.168.64.30 (192.168.64.30)&amp;#39; can&amp;#39;t be established.
ED25519 key fingerprint is SHA256:+grKMOsgQHDF0lTTZTD65khFhnk5Q56wvNSFV4+NsnA.
This key is not known by any other names.
Are you sure you want to continue connecting (yes/no/[fingerprint])? yes
[root@192.168.64.30&amp;#39;s password: (비번입력)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;5-master에-클러스터-기본-구성-설치-arm64-버전&#34;&gt;5. master에 클러스터 기본 구성 설치 (arm64 버전)&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &amp;#39;======== [4] Rocky Linux 기본 설정 ========&amp;#39;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &amp;#39;======== [4-1] 패키지 업데이트 ========&amp;#39;
yum -y update

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &amp;#39;======== [4-2] 타임존 설정 ========&amp;#39;
timedatectl set-timezone Asia/Seoul

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &amp;#39;======== [4-3] [WARNING FileExisting-tc]: tc not found in system path 로그 관련 업데이트 ========&amp;#39;
yum install -y yum-utils iproute-tc

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &amp;#39;======= [4-4] hosts 설정 ==========&amp;#39;
cat &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&amp;lt; EOF &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; /etc/hosts
192.168.64.30 k8s-master
192.168.64.31 k8s-node1
192.168.64.32 k8s-node2
EOF

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &amp;#39;======== [5] kubeadm 설치 전 사전작업 ========&amp;#39;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &amp;#39;======== [5] 방화벽 해제 ========&amp;#39;
systemctl stop firewalld &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; systemctl disable firewalld

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &amp;#39;======== [5] Swap 비활성화 ========&amp;#39;
swapoff -a &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; sed -i &amp;#39;/ swap / s/&lt;span style=&#34;color:#4e9a06&#34;&gt;^/&lt;/span&gt;#/&amp;#39; /etc/fstab

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &amp;#39;======== [6] 컨테이너 런타임 설치 ========&amp;#39;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &amp;#39;======== [6-1] 컨테이너 런타임 설치 전 사전작업 ========&amp;#39;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &amp;#39;======== [6-1] iptable 세팅 ========&amp;#39;
cat &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&amp;lt;EOF &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;tee /etc/modules-load.d/k8s.conf
overlay
br_netfilter
EOF

modprobe overlay
modprobe br_netfilter

cat &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&amp;lt;EOF &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;tee /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-iptables  = 1
net.bridge.bridge-nf-call-ip6tables = 1
net.ipv4.ip_forward                 = 1
EOF

sysctl --system

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &amp;#39;======== [6-2] 컨테이너 런타임 (containerd 설치) ========&amp;#39;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &amp;#39;======== [6-2-1] containerd 패키지 설치 (option2) ========&amp;#39;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &amp;#39;======== [6-2-1-1] docker engine 설치 ========&amp;#39;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &amp;#39;======== [6-2-1-1] repo 설정 ========&amp;#39;
yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &amp;#39;======== [6-2-1-1] containerd 설치 ========&amp;#39;
yum install -y containerd.io-1.6.21-3.1.el9.aarch64
systemctl daemon-reload
systemctl enable --now containerd

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &amp;#39;======== [6-3] 컨테이너 런타임 : cri 활성화 ========&amp;#39;
containerd config default &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt; /etc/containerd/config.toml
sed -i &amp;#39;s/ SystemdCgroup = false/ SystemdCgroup = true/&amp;#39; /etc/containerd/config.toml
systemctl restart containerd

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &amp;#39;======== [7] kubeadm 설치 ========&amp;#39;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &amp;#39;======== [7] repo 설정 ========&amp;#39;
cat &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&amp;lt;EOF &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; sudo tee /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://pkgs.k8s.io/core:/stable:/v1.27/rpm/
enabled=1
gpgcheck=1
gpgkey=https://pkgs.k8s.io/core:/stable:/v1.27/rpm/repodata/repomd.xml.key
exclude=kubelet kubeadm kubectl cri-tools kubernetes-cni
EOF

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &amp;#39;======== [7] SELinux 설정 ========&amp;#39;
setenforce 0
sed -i &amp;#39;s/&lt;span style=&#34;color:#4e9a06&#34;&gt;^S&lt;/span&gt;ELINUX=enforcing$/SELINUX=permissive/&amp;#39; /etc/selinux/config

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &amp;#39;======== [7] kubelet, kubeadm, kubectl 패키지 설치 ========&amp;#39;
yum install -y kubelet-1.27.2-150500.1.1.aarch64 kubeadm-1.27.2-150500.1.1.aarch64 kubectl-1.27.2-150500.1.1.aarch64 --disableexcludes=kubernetes
systemctl enable --now kubelet


&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &amp;#39;======== [8] kubeadm으로 클러스터 생성  ========&amp;#39;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &amp;#39;======== [8-1] 클러스터 초기화 (Pod Network 세팅) ========&amp;#39;
kubeadm init --pod-network-cidr=20.96.0.0/12 --apiserver-advertise-address 192.168.64.30
kubeadm token create --print-join-command &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt; ~/join.sh

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &amp;#39;======== [8-2] kubectl 사용 설정 ========&amp;#39;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;mkdir&lt;/span&gt; -p $HOME/.kube
cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
chown $(id -u):$(id -g) $HOME/.kube/config

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &amp;#39;======== [8-3] Pod Network 설치 (calico) ========&amp;#39;
kubectl create -f https://raw.githubusercontent.com/k8s-1pro/install/main/ground/k8s-1.27/calico-3.26.4/calico.yaml
kubectl create -f https://raw.githubusercontent.com/k8s-1pro/install/main/ground/k8s-1.27/calico-3.26.4/calico-custom.yaml

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &amp;#39;======== [9] 쿠버네티스 편의기능 설치 ========&amp;#39;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &amp;#39;======== [9-1] kubectl 자동완성 기능 ========&amp;#39;
yum -y install bash-completion
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;source &amp;lt;(kubectl completion bash)&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; ~/.bashrc
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &amp;#39;alias k=kubectl&amp;#39; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt;~/.bashrc
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &amp;#39;complete -o default -F __start_kubectl k&amp;#39; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt;~/.bashrc
source ~/.bashrc

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &amp;#39;======== [9-2] Dashboard 설치 ========&amp;#39;
kubectl create -f https://raw.githubusercontent.com/k8s-1pro/install/main/ground/k8s-1.27/dashboard-2.7.0/dashboard.yaml

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &amp;#39;======== [9-3] Metrics Server 설치 ========&amp;#39;
kubectl create -f https://raw.githubusercontent.com/k8s-1pro/install/main/ground/k8s-1.27/metrics-server-0.6.3/metrics-server.yaml

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &amp;#39;======== [10-1] Pod 상태 확인 ========&amp;#39;
kubectl get pod -A
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;3-node1-vm-세팅&#34;&gt;3. Node1 VM 세팅&lt;/h3&gt;
&lt;p&gt;3-1) UTM에서 VM 생성&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Create a New Virtual Machine 선택&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;- Start : Virtualize
- Operating System : Linux
- Linux : Boot ISO Image [Browse..] -&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt; Rocky ISO 파일 선택
- Hardware : Memory : 2048 MB, CPU Cores : 2
- Size : 24 GB
- Shared Directory : 설정 안함
- Summary : Name : k8s-node1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;3-2) 생성된 VM 실행 후 Rocky Linux 초기 세팅&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;1. 언어 : 한국어(대한민국)
2. 사용자 설정 
   - root 비밀번호(R) : 개인별 root 비밀번호 입력
   - root 계정을 잠금 - 체크해제
   - root가 비밀번호로 SSH 로그인하도록 허용 - 체크 
3. 설치 목적지 (D)
   - 저장소 구성 : 자동 설정(A) [체크] 확인 후 완료(D) 클릭
4. 네트워크 및 호스트 이름
    - 호스트 이름(H) : k8s-node1  입력 후 [적용(A)] 클릭
    - 이더넷(enp0s1) : [설정(C)..] 클릭
       1) [IPv4 설정] 탭 클릭
       2) Method : 수동
       3) 주소 : [Add] 클릭 후 -&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt; 주소(192.168.64.31), 넷마스크(255.255.255.0), 게이트웨이(192.168.64.1)
       4) DNS servers: 192.168.64.1
    - [완료(D)] 클릭
5. [설치 시작(B)] 클릭
6. 설치 완료 메세지 확인 후 [재시작]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;3-3) Rocky Linux 실행&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CD/DVD에 ISO 이미지가 있기 때문에 LINUX 설치를 하라고 나옴&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;1. UTM 화면 가장 하단에 CD/DVD를 클릭해서 Clear 클릭 (선택되어 있는 ISO이미지가 제거됨)
2. Install Rokcy Linux 9.2 대기중인 화면 상단에서 [전원버튼] 눌러서 Shutdown 하고, [▶] 버튼 눌러서 VM 기동하기
3. UTM에서 제공되는 콘솔창은 내리기 (copy&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;amp;&lt;/span&gt;paste 가 잘안됨)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;4-원격-접속-mac-터미널-사용-1&#34;&gt;4. 원격 접속 (Mac 터미널 사용)&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;$ ssh root@192.168.64.31

The authenticity of host &amp;#39;192.168.64.31 (192.168.64.31)&amp;#39; can&amp;#39;t be established.
ED25519 key fingerprint is SHA256:+grKMOsgQHDF0lTTZTD65khFhnk5Q56wvNSFV4+NsnA.
This key is not known by any other names.
Are you sure you want to continue connecting (yes/no/[fingerprint])? yes
[root@192.168.64.31&amp;#39;s password: (비번입력)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;5-node1에-기본-구성-설치-arm64-버전&#34;&gt;5. Node1에 기본 구성 설치 (arm64 버전)&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &amp;#39;======== [4] Rocky Linux 기본 설정 ========&amp;#39;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &amp;#39;======== [4-1] 패키지 업데이트 ========&amp;#39;
yum -y update

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &amp;#39;======== [4-2] 타임존 설정 ========&amp;#39;
timedatectl set-timezone Asia/Seoul

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &amp;#39;======== [4-3] [WARNING FileExisting-tc]: tc not found in system path 로그 관련 업데이트 ========&amp;#39;
yum install -y yum-utils iproute-tc

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &amp;#39;======= [4-4] hosts 설정 ==========&amp;#39;
cat &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&amp;lt; EOF &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; /etc/hosts
192.168.64.30 k8s-master
192.168.64.31 k8s-node1
192.168.64.32 k8s-node2
EOF

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &amp;#39;======== [5] kubeadm 설치 전 사전작업 ========&amp;#39;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &amp;#39;======== [5] 방화벽 해제 ========&amp;#39;
systemctl stop firewalld &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; systemctl disable firewalld

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &amp;#39;======== [5] Swap 비활성화 ========&amp;#39;
swapoff -a &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; sed -i &amp;#39;/ swap / s/&lt;span style=&#34;color:#4e9a06&#34;&gt;^/&lt;/span&gt;#/&amp;#39; /etc/fstab

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &amp;#39;======== [6] 컨테이너 런타임 설치 ========&amp;#39;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &amp;#39;======== [6-1] 컨테이너 런타임 설치 전 사전작업 ========&amp;#39;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &amp;#39;======== [6-1] iptable 세팅 ========&amp;#39;
cat &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&amp;lt;EOF &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;tee /etc/modules-load.d/k8s.conf
overlay
br_netfilter
EOF

modprobe overlay
modprobe br_netfilter

cat &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&amp;lt;EOF &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;tee /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-iptables  = 1
net.bridge.bridge-nf-call-ip6tables = 1
net.ipv4.ip_forward                 = 1
EOF

sysctl --system

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &amp;#39;======== [6-2] 컨테이너 런타임 (containerd 설치) ========&amp;#39;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &amp;#39;======== [6-2-1] containerd 패키지 설치 (option2) ========&amp;#39;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &amp;#39;======== [6-2-1-1] docker engine 설치 ========&amp;#39;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &amp;#39;======== [6-2-1-1] repo 설정 ========&amp;#39;
yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &amp;#39;======== [6-2-1-1] containerd 설치 ========&amp;#39;
yum install -y containerd.io-1.6.21-3.1.el9.aarch64
systemctl daemon-reload
systemctl enable --now containerd

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &amp;#39;======== [6-3] 컨테이너 런타임 : cri 활성화 ========&amp;#39;
containerd config default &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt; /etc/containerd/config.toml
sed -i &amp;#39;s/ SystemdCgroup = false/ SystemdCgroup = true/&amp;#39; /etc/containerd/config.toml
systemctl restart containerd

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &amp;#39;======== [7] kubeadm 설치 ========&amp;#39;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &amp;#39;======== [7] repo 설정 ========&amp;#39;
cat &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&amp;lt;EOF &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; sudo tee /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://pkgs.k8s.io/core:/stable:/v1.27/rpm/
enabled=1
gpgcheck=1
gpgkey=https://pkgs.k8s.io/core:/stable:/v1.27/rpm/repodata/repomd.xml.key
exclude=kubelet kubeadm kubectl cri-tools kubernetes-cni
EOF

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &amp;#39;======== [7] SELinux 설정 ========&amp;#39;
setenforce 0
sed -i &amp;#39;s/&lt;span style=&#34;color:#4e9a06&#34;&gt;^S&lt;/span&gt;ELINUX=enforcing$/SELINUX=permissive/&amp;#39; /etc/selinux/config

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &amp;#39;======== [7] kubelet, kubeadm, kubectl 패키지 설치 ========&amp;#39;
yum install -y kubelet-1.27.2-150500.1.1.aarch64 kubeadm-1.27.2-150500.1.1.aarch64 --disableexcludes=kubernetes
systemctl enable --now kubelet
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;3-node2-vm-세팅&#34;&gt;3. Node2 VM 세팅&lt;/h3&gt;
&lt;p&gt;3-1) UTM에서 VM 생성&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Create a New Virtual Machine 선택&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;- Start : Virtualize
- Operating System : Linux
- Linux : Boot ISO Image [Browse..] -&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt; Rocky ISO 파일 선택
- Hardware : Memory : 2048 MB, CPU Cores : 2
- Size : 24 GB
- Shared Directory : 설정 안함
- Summary : Name : k8s-node2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;3-2) 생성된 VM 실행 후 Rocky Linux 초기 세팅&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;1. 언어 : 한국어(대한민국)
2. 사용자 설정 
   - root 비밀번호(R) : 개인별 root 비밀번호 입력
   - root 계정을 잠금 - 체크해제
   - root가 비밀번호로 SSH 로그인하도록 허용 - 체크 
3. 설치 목적지 (D)
   - 저장소 구성 : 자동 설정(A) [체크] 확인 후 완료(D) 클릭
4. 네트워크 및 호스트 이름
    - 호스트 이름(H) : k8s-node2  입력 후 [적용(A)] 클릭
    - 이더넷(enp0s1) : [설정(C)..] 클릭
       1) [IPv4 설정] 탭 클릭
       2) Method : 수동
       3) 주소 : [Add] 클릭 후 -&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt; 주소(192.168.64.32), 넷마스크(255.255.255.0), 게이트웨이(192.168.64.1)
       4) DNS servers: 192.168.64.1
    - [완료(D)] 클릭
5. [설치 시작(B)] 클릭
6. 설치 완료 메세지 확인 후 [재시작]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;3-3) Rocky Linux 실행&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CD/DVD에 ISO 이미지가 있기 때문에 LINUX 설치를 하라고 나옴&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;1. UTM 화면 가장 하단에 CD/DVD를 클릭해서 Clear 클릭 (선택되어 있는 ISO이미지가 제거됨)
2. Install Rokcy Linux 9.2 대기중인 화면 상단에서 [전원버튼] 눌러서 Shutdown 하고, [▶] 버튼 눌러서 VM 기동하기
3. UTM에서 제공되는 콘솔창은 내리기 (copy&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;amp;&lt;/span&gt;paste 가 잘안됨)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;4-원격-접속-mac-터미널-사용-2&#34;&gt;4. 원격 접속 (Mac 터미널 사용)&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;$ ssh root@192.168.64.32

The authenticity of host &amp;#39;192.168.64.32 (192.168.64.32)&amp;#39; can&amp;#39;t be established.
ED25519 key fingerprint is SHA256:+grKMOsgQHDF0lTTZTD65khFhnk5Q56wvNSFV4+NsnA.
This key is not known by any other names.
Are you sure you want to continue connecting (yes/no/[fingerprint])? yes
[root@192.168.64.32&amp;#39;s password: (비번입력)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;5-node1에-기본-구성-설치-arm64-버전-1&#34;&gt;5. Node1에 기본 구성 설치 (arm64 버전)&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &amp;#39;======== [4] Rocky Linux 기본 설정 ========&amp;#39;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &amp;#39;======== [4-1] 패키지 업데이트 ========&amp;#39;
yum -y update

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &amp;#39;======== [4-2] 타임존 설정 ========&amp;#39;
timedatectl set-timezone Asia/Seoul

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &amp;#39;======== [4-3] [WARNING FileExisting-tc]: tc not found in system path 로그 관련 업데이트 ========&amp;#39;
yum install -y yum-utils iproute-tc

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &amp;#39;======= [4-4] hosts 설정 ==========&amp;#39;
cat &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&amp;lt; EOF &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; /etc/hosts
192.168.64.30 k8s-master
192.168.64.31 k8s-node1
192.168.64.32 k8s-node2
EOF

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &amp;#39;======== [5] kubeadm 설치 전 사전작업 ========&amp;#39;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &amp;#39;======== [5] 방화벽 해제 ========&amp;#39;
systemctl stop firewalld &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; systemctl disable firewalld

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &amp;#39;======== [5] Swap 비활성화 ========&amp;#39;
swapoff -a &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; sed -i &amp;#39;/ swap / s/&lt;span style=&#34;color:#4e9a06&#34;&gt;^/&lt;/span&gt;#/&amp;#39; /etc/fstab

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &amp;#39;======== [6] 컨테이너 런타임 설치 ========&amp;#39;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &amp;#39;======== [6-1] 컨테이너 런타임 설치 전 사전작업 ========&amp;#39;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &amp;#39;======== [6-1] iptable 세팅 ========&amp;#39;
cat &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&amp;lt;EOF &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;tee /etc/modules-load.d/k8s.conf
overlay
br_netfilter
EOF

modprobe overlay
modprobe br_netfilter

cat &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&amp;lt;EOF &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;tee /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-iptables  = 1
net.bridge.bridge-nf-call-ip6tables = 1
net.ipv4.ip_forward                 = 1
EOF

sysctl --system

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &amp;#39;======== [6-2] 컨테이너 런타임 (containerd 설치) ========&amp;#39;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &amp;#39;======== [6-2-1] containerd 패키지 설치 (option2) ========&amp;#39;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &amp;#39;======== [6-2-1-1] docker engine 설치 ========&amp;#39;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &amp;#39;======== [6-2-1-1] repo 설정 ========&amp;#39;
yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &amp;#39;======== [6-2-1-1] containerd 설치 ========&amp;#39;
yum install -y containerd.io-1.6.21-3.1.el9.aarch64
systemctl daemon-reload
systemctl enable --now containerd

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &amp;#39;======== [6-3] 컨테이너 런타임 : cri 활성화 ========&amp;#39;
containerd config default &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt; /etc/containerd/config.toml
sed -i &amp;#39;s/ SystemdCgroup = false/ SystemdCgroup = true/&amp;#39; /etc/containerd/config.toml
systemctl restart containerd

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &amp;#39;======== [7] kubeadm 설치 ========&amp;#39;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &amp;#39;======== [7] repo 설정 ========&amp;#39;
cat &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&amp;lt;EOF &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; sudo tee /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://pkgs.k8s.io/core:/stable:/v1.27/rpm/
enabled=1
gpgcheck=1
gpgkey=https://pkgs.k8s.io/core:/stable:/v1.27/rpm/repodata/repomd.xml.key
exclude=kubelet kubeadm kubectl cri-tools kubernetes-cni
EOF

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &amp;#39;======== [7] SELinux 설정 ========&amp;#39;
setenforce 0
sed -i &amp;#39;s/&lt;span style=&#34;color:#4e9a06&#34;&gt;^S&lt;/span&gt;ELINUX=enforcing$/SELINUX=permissive/&amp;#39; /etc/selinux/config

&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &amp;#39;======== [7] kubelet, kubeadm, kubectl 패키지 설치 ========&amp;#39;
yum install -y kubelet-1.27.2-150500.1.1.aarch64 kubeadm-1.27.2-150500.1.1.aarch64 --disableexcludes=kubernetes
systemctl enable --now kubelet
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;6-worker-node-연결-및-master-상태-확인&#34;&gt;6. Worker Node 연결 및 Master 상태 확인&lt;/h3&gt;
&lt;p&gt;6-1) master에서 cat 명령으로 자신에 토큰 확인 및 복사&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;[root@k8s-master ~]# cat ~/join.sh

join 192.168.64.30:6443 --token bver73.wda72kx4afiuhspo --discovery-token-ca-cert-hash sha256:7205b3fd6030e47b74aa11451221ff3c77daa0305aad0bc4a2d3196e69eb42b7
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br/&gt;
8-2) node1에서 토큰 붙여놓기
&lt;br/&gt;
8-3) node2에서 토큰 붙여놓기 반복
&lt;br/&gt;
8-4) master 에서 노드 상태 확인
```cmd
kubectl get nodes
```
&lt;br/&gt;
&lt;h3 id=&#34;7-대시보드-접근&#34;&gt;7. 대시보드 접근&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-ssh&#34; data-lang=&#34;ssh&#34;&gt;https://192.168.64.30:30000/#/login
&lt;/code&gt;&lt;/pre&gt;&lt;br/&gt;
&lt;br/&gt;
&lt;h2 id=&#34;참고&#34;&gt;참고&lt;/h2&gt;
&lt;h3 id=&#34;version-정보&#34;&gt;Version 정보&lt;/h3&gt;
&lt;figure&gt;
  &lt;img src=&#34;https://kubetm.github.io/img/practice/install/Installation Step Case7 for Kubernetes Update - mac.jpg&#34;
       alt=&#34;Installation Step Case7 for Kubernetes Update - mac&#34;
       class=&#34;mt-3 mb-3 border border-info rounded&#34; /&gt;
&lt;/figure&gt;
&lt;h3 id=&#34;network-구성도&#34;&gt;Network 구성도&lt;/h3&gt;
&lt;figure&gt;
  &lt;img src=&#34;https://kubetm.github.io/img/practice/install/Installation Network Case7 for Kubernetes - mac.jpg&#34;
       alt=&#34;Installation Network Case7 for Kubernetes - mac&#34;
       class=&#34;mt-3 mb-3 border border-info rounded&#34; /&gt;
&lt;/figure&gt;

      </description>
    </item>
    
  </channel>
</rss>
