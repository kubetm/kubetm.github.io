<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>KubeTM Blog with Kubernetes</title>
    <link>https://kubetm.github.io/</link>
    <description>Recent content on KubeTM Blog with Kubernetes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 03 Feb 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://kubetm.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>2월 진행사항</title>
      <link>https://kubetm.github.io/plan/2020_02/</link>
      <pubDate>Mon, 03 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/plan/2020_02/</guid>
      <description>-1일- [중급편 연재] Ingress PPT 100% Blog 100% Recording 100%
 실습 편집 및 업로드 자료실 업데이트</description>
    </item>
    
    <item>
      <title>Ingress</title>
      <link>https://kubetm.github.io/practice/intermediate/new-ingress/</link>
      <pubDate>Mon, 20 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/practice/intermediate/new-ingress/</guid>
      <description>1. Nginx Controller  1-1) Nginx 설치 kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/nginx-0.27.1/deploy/static/mandatory.yaml  1-2) NodePort Service 생성 kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/nginx-0.27.1/deploy/static/provider/baremetal/service-nodeport.yaml  
2. Service Loadbalancing  2-1) Shopping Page apiVersion: v1 kind: Pod metadata: name: pod-shopping labels: category: shopping spec: containers: - name: container image: kubetm/shopping --- apiVersion: v1 kind: Service metadata: name: svc-shopping spec: selector: category: shopping ports: - port: 8080  2-2) Customer Center apiVersion: v1 kind: Pod metadata: name: pod-customer labels: category: customer spec: containers: - name: container image: kubetm/customer --- apiVersion: v1 kind: Service metadata: name: svc-customer spec: selector: category: customer ports: - port: 8080  2-3) Order Service apiVersion: v1 kind: Pod metadata: name: pod-order labels: category: order spec: containers: - name: container image: kubetm/order --- apiVersion: v1 kind: Service metadata: name: svc-order spec: selector: category: order ports: - port: 8080  2-4) Ingress apiVersion: networking.</description>
    </item>
    
    <item>
      <title>Kubernetes 관련 도서</title>
      <link>https://kubetm.github.io/info/book/</link>
      <pubDate>Mon, 06 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/info/book/</guid>
      <description>Kubernetes IN ACTION   방대한 분량임에도 불구하고 버릴 내용이 하나도 없음 시간이 되서 3번정도 정독한다면 제 강의는 들을 필요 없어요 ^^ 처음 쿠버네티스를 시작하거나 시간적인 여부가 있는 분들께 권장 Example Github : https://github.com/luksa/kubernetes-in-action   
쿠버네티스 입문   부담없는 분량의 책 두께에 비해 예제와 설명들이 알차게 들어있음 정리나 전체적인 챕터 구성이 잘 되어 있어서 원하는 정보를 책에서 빨리 찾아 볼 수 있음 그래서 어느정도 쿠버네티스를 알고 계신 분들이 쿡북처럼 활용하기에 아주 좋은책 Example Github : https://github.</description>
    </item>
    
    <item>
      <title>1월 진행사항</title>
      <link>https://kubetm.github.io/plan/2020_01/</link>
      <pubDate>Sat, 04 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/plan/2020_01/</guid>
      <description>-31일- [중급편 연재] Ingress PPT 100% Blog 90% Recording 90%
 실습 녹음  
-30일- [중급편 연재] Ingress PPT 100% Blog 90% Recording 70%
 실습 스크립트 작성  
-29일- [중급편 연재] Ingress PPT 100% Blog 90% Recording 50%
 편집 및 업로드   
-28일- [중급편 연재] Ingress PPT 100% Blog 90% Recording 40%
 이론 스크립팅 및 녹음  
-24 ~ 27일-  설 연휴</description>
    </item>
    
    <item>
      <title>Kubernetes 관련 블로그</title>
      <link>https://kubetm.github.io/info/blog/</link>
      <pubDate>Fri, 03 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/info/blog/</guid>
      <description>그동안 쿠버네티스를 공부하면서 즐겨찾기를 해놨던 블로그들인데, 다들 너무 도움이 되는 내용들이고 자신의 이해도에 맞는 블로그들을 참조하시면 좋습니다^^

조대협의 블로그    내용도 좋지만 트랜드나 기술에 대한 정보들이 가장 빨리 업데이트 됩니다.   
alice_k106    쿠버네티스 전 범위를 다루고 있지는 않지만, 포스트된 주제에 대해서는 가장 깊히 있게 배울 수 있는 것 같아요.   
아리수    많은 범위를 다루고 있고, 주제마다 내용도 간결합니다.</description>
    </item>
    
    <item>
      <title>Kubernetes 관련 커뮤니티</title>
      <link>https://kubetm.github.io/info/community/</link>
      <pubDate>Fri, 03 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/info/community/</guid>
      <description>   
Kubernetes Korea Group    쿠버네티스 관련 많은 전문가들께서 활동하고 계시고 각종 행사나 이슈들이 공유됨 대한민국 넘버원 커뮤니티라고 생각함  
참고
 글로벌 커뮤니티1 : https://www.facebook.com/groups/kubernetes.users 글로벌 커뮤니티2 : https://www.facebook.com/kubernetesio/  
  개인적인 의견이며, 삭제 요청시 kube.taemin@gmail.com로 연락바랍니다.  </description>
    </item>
    
    <item>
      <title>StatefulSet</title>
      <link>https://kubetm.github.io/practice/intermediate/new-statefulset/</link>
      <pubDate>Tue, 24 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/practice/intermediate/new-statefulset/</guid>
      <description>1. StatefulSet Controller  1-1) ReplicaSet apiVersion: apps/v1 kind: ReplicaSet metadata: name: replica-web spec: replicas: 1 selector: matchLabels: type: web template: metadata: labels: type: web spec: containers: - name: container image: kubetm/app terminationGracePeriodSeconds: 10  1-2) StatefulSet apiVersion: apps/v1 kind: StatefulSet metadata: name: stateful-db spec: replicas: 1 selector: matchLabels: type: db template: metadata: labels: type: db spec: containers: - name: container image: kubetm/app terminationGracePeriodSeconds: 10</description>
    </item>
    
    <item>
      <title>GoogleCloud Summit Seoul 2019</title>
      <link>https://kubetm.github.io/info/youtube-googlecloud-2019/</link>
      <pubDate>Mon, 23 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/info/youtube-googlecloud-2019/</guid>
      <description>GoogleCloud Summit Site URL : https://inthecloud.withgoogle.com/summit-sel-19/home.html GoogleCloud Youtube URL : https://www.youtube.com/watch?v=ZkKgyXDc1lQ&amp;amp;list=PLBgogxgQVM9tS7Yhzjc3Wt56jc5j-z_4C   
한 번 빌드해 Anthos로 클라우드와 온프레미스에서 구동하기    Kubernetes, MicroService, Istio Knative Anthos SKAFFOLD   
Cloud, Journey to Right Things.    Cloud, 기업의 대표적인 고민, 왜 사용해야 할까요? Why Google Cloud? 도입을 위한 지침서   
Google Cloud Platform에서의 Istio    Istio</description>
    </item>
    
    <item>
      <title>Pod</title>
      <link>https://kubetm.github.io/practice/intermediate/pod-probe/</link>
      <pubDate>Mon, 16 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/practice/intermediate/pod-probe/</guid>
      <description>1. ReadinessProbe  1-1) Service apiVersion: v1 kind: Service metadata: name: svc-readiness spec: selector: app: readiness ports: - port: 8080 targetPort: 8080  1-2) Pod apiVersion: v1 kind: Pod metadata: name: pod1 labels: app: readiness spec: containers: - name: container image: kubetm/app ports: - containerPort: 8080	terminationGracePeriodSeconds: 0  while true; do date &amp;amp;&amp;amp; curl 10.97.190.80:8080/hostname; sleep 1; done  1-3) Pod apiVersion: v1 kind: Pod metadata: name: pod-readiness-exec1 labels: app: readiness spec: containers: - name: readiness image: kubetm/app ports: - containerPort: 8080	readinessProbe: exec: command: [&amp;quot;cat&amp;quot;, &amp;quot;/readiness/ready.</description>
    </item>
    
    <item>
      <title>Open Infrastructure &amp; Cloud Native Days Korea 2019</title>
      <link>https://kubetm.github.io/info/youtube-openinfra-2019/</link>
      <pubDate>Thu, 12 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/info/youtube-openinfra-2019/</guid>
      <description>Openinfradays Site URL : https://openinfradays.kr/ OpenStack Korea Group Youtube URL : https://www.youtube.com/channel/UCVQ1ILIOsGH-YX9FkEmkjRQ   
카카오 T 택시 사례를 통해 살펴보는 카카오 클라우드의 Kubernetes as a Service    Kubernetes를 도입하면 뭐가 좋아지나요? 카카오 T택시 시스템 구조 Canary 배포 멀티 클러스터 인증 통합, 사용자 ACL 자동화된 클러스터 라이프사이클 물리 인프라 자원 통합   
MSA, K8S를 이용한 대륙의 서비스 개발 사례 - 이랜드 차이나    왜 Docker를 선택했나?</description>
    </item>
    
    <item>
      <title>12월 진행사항</title>
      <link>https://kubetm.github.io/plan/2019_12/</link>
      <pubDate>Wed, 04 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/plan/2019_12/</guid>
      <description>-31일- [중급편 연재] StatefulSet PPT 100% Blog 90% Recording 50%
 이론 녹음/편집 후 업로드   -27일- [중급편 연재] StatefulSet PPT 100% Blog 90% Recording 20%
 이론 스크립트 작성  -25일- [중급편 연재] StatefulSet PPT 100% Blog 90% Recording 0%
 PPT 내용 정리 및 실습자료 Blog 업데이트   
-24일- [중급편 연재] StatefulSet PPT 80% Blog 30% Recording 0%
 PPT 내용 정리 및 실습자료 Blog 업데이트</description>
    </item>
    
    <item>
      <title>[인프런] 강좌 계획</title>
      <link>https://kubetm.github.io/plan/intermediate/</link>
      <pubDate>Thu, 21 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/plan/intermediate/</guid>
      <description>  
강의 범위  
강의 목차  </description>
    </item>
    
    <item>
      <title>Volume</title>
      <link>https://kubetm.github.io/practice/intermediate/object-volume/</link>
      <pubDate>Thu, 21 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/practice/intermediate/object-volume/</guid>
      <description>1. 사전 구성 - StorageOS 설치 및 StorageClass 생성  1-1) StorageOS Operator 설치 설치
kubectl apply -f https://github.com/storageos/cluster-operator/releases/download/1.5.0/storageos-operator.yaml  설치 확인
kubectl get all -n storageos-operator  Depolyment 수정
kubectl edit deployments.apps storageos-cluster-operator -n storageos-operator  spec.containers.env의 DISABLE_SCHEDULER_WEBHOOK의 Value를 true로 설정
spec: containers: - command: - cluster-operator env: - name: DISABLE_SCHEDULER_WEBHOOK value: &amp;quot;false&amp;quot; # true 로 변경 image: storageos/cluster-operator:1.5.0 imagePullPolicy: IfNotPresent  관리 계정을 위한 Secret 생성 (username 및 password를 Base64문자로 만들기)</description>
    </item>
    
    <item>
      <title>Service</title>
      <link>https://kubetm.github.io/practice/intermediate/object-service/</link>
      <pubDate>Sat, 16 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/practice/intermediate/object-service/</guid>
      <description>Dns  Headless  Exteranl   
Headless  1-1) Service apiVersion: v1 kind: Service metadata: name: clusterip1 spec: selector: svc: clusterip ports: - port: 80 targetPort: 8080  1-2) Pod apiVersion: v1 kind: Pod metadata: name: pod1 labels: svc: clusterip spec: containers: - name: container image: kubetm/app  1-3) Request Pod apiVersion: v1 kind: Pod metadata: name: request-pod spec: containers: - name: container image: kubetm/init  kubectl exec request-pod -it /bin/bash  nslookup</description>
    </item>
    
    <item>
      <title>Kubernetes 설치 - Case 3</title>
      <link>https://kubetm.github.io/practice/appendix/installation_case3/</link>
      <pubDate>Tue, 12 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/practice/appendix/installation_case3/</guid>
      <description>구글 클라우드 플랫폼을 이용해서 VM을 만드는 경우   
 1-1) Join GCP 1-1-1) Join 아래 사이트에 들어가서 상단에 [무료로 시작하기] 버튼 클릭  &amp;gt;https://cloud.google.com/

1) Country : South Korea 2) Terms of Service : 체크 후 [CONTINUE] 3) 이름 및 주소 확인 후 Payment method 입력  자신의 신용카드 번호를 입력하지만 크레딧을 다 소모하거나 12개월이 지나도 자동으로 결재가 되진 않습니다.
 

2-1) Create Cluster 2-1-1) Cluster 생성 Kubernetes Engine &amp;gt; Clusters &amp;gt; [CREATE CLUSTER] 클릭</description>
    </item>
    
    <item>
      <title>Kubernetes 설치 - Case 2</title>
      <link>https://kubetm.github.io/practice/appendix/installation_case2/</link>
      <pubDate>Mon, 11 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/practice/appendix/installation_case2/</guid>
      <description>윈도우나 맥이 설치되어 있는 Desktop가 1대 있고, 그위에 VirtualBox와 같은 도구를 이용해서 VM을 만드는 경우   
 1-1) Install Virtualbox 1-1-1) virtualbox 다운로드 및 설치 [윈도우10 버전으로 진행] 아래 경로에서 [Windows hosts] 클릭 하여 다운로드 후 설치 (별다른 변경없이 Next만 함)  &amp;gt;https://www.virtualbox.org/wiki/Downloads

Mac 사용자 참고 URL  &amp;gt;https://www.virtualbox.org/wiki/Mac%20OS%20X%20build%20instructions

1-1-2) CentOS Download 아래 경로로 들어가서 원하는 경로에서 파일 다운로드  &amp;gt;http://isoredirect.centos.org/centos/7/isos/x86_64/

1-1-3) 원격접속 툴 MobaXterm 설치 꼭 MobaXterm이 아닌 각자 편한 원격접속 툴을 사용하셔도 되세요.</description>
    </item>
    
    <item>
      <title>Kubernetes 설치 - Case1</title>
      <link>https://kubetm.github.io/practice/appendix/installation_case1/</link>
      <pubDate>Sun, 10 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/practice/appendix/installation_case1/</guid>
      <description>남는 Server나 Netebook이 1대 있고, 그 서버 자체를 처음부터 구성하는 경우 그 서버의 CentOS 설치부터 가이드 시작..   
 1-1) Install CentOS 1-1-1) CentOS 다운로드 아래 경로로 들어가서 원하는 경로에서 파일 다운로드  &amp;gt;http://isoredirect.centos.org/centos/7/isos/x86_64/
1-1-2) Booting USB 만들기 아래 경로로 들어가면 중간 정도에 다운로드 버튼 있어요.  &amp;gt;https://rufus.ie/ko_KR.html  다운로드 후 실행
- 장치 : USB 선택 - 부트 선택 : 디스크 또는 ISO 이미지 [선택] 클릭 후 다운받은 파일 지정 - [시작]  1-1-3) CentOS 설치 (실습 동영상 화면은 VM설치 화면으로 대체했지만 실제로는 아래와 같이 하시면 되세요)  USB를 설치할 서버에 꼽고 부팅하면 CentOS 설치단계로 가져요  안되시는 분은 부팅 순서를 USB가 변경하셔야 됩니다.</description>
    </item>
    
    <item>
      <title>DaemonSet, Job, CronJob</title>
      <link>https://kubetm.github.io/practice/beginner/controller-daemonset_job_cronjob/</link>
      <pubDate>Sat, 09 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/practice/beginner/controller-daemonset_job_cronjob/</guid>
      <description>1-1) DaemonSet - HostPort DaemonSet apiVersion: apps/v1 kind: DaemonSet metadata: name: daemonset-1 spec: selector: matchLabels: type: app template: metadata: labels: type: app spec: containers: - name: container image: kubetm/app ports: - containerPort: 8080 hostPort: 18080  Command curl 192.168.0.31:18080/hostname  1-2) DaemonSet - NodeSelector DaemonSet apiVersion: apps/v1 kind: DaemonSet metadata: name: daemonset-2 spec: selector: matchLabels: type: app template: metadata: labels: type: app spec: nodeSelector: os: centos containers: - name: container image: kubetm/app ports: - containerPort: 8080  Kubectl Label Add</description>
    </item>
    
    <item>
      <title>Deployment</title>
      <link>https://kubetm.github.io/practice/beginner/controller-deployment/</link>
      <pubDate>Fri, 08 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/practice/beginner/controller-deployment/</guid>
      <description>1) ReCreate Deployment apiVersion: apps/v1 kind: Deployment metadata: name: deployment-1 spec: selector: matchLabels: type: app replicas: 2 strategy: type: Recreate revisionHistoryLimit: 1 template: metadata: labels: type: app spec: containers: - name: container image: kubetm/app:v1 terminationGracePeriodSeconds: 10  Service apiVersion: v1 kind: Service metadata: name: svc-1 spec: selector: type: app ports: - port: 8080 protocol: TCP targetPort: 8080  Command while true; do curl 10.99.5.3:8080/version; sleep 1; done  Kubectl kubectl rollout undo deployment deployment-1 --to-revision=2 kubectl rollout history deployment deployment-1  2) RollingUpdate Deployment apiVersion: apps/v1 kind: Deployment metadata: name: deployment-2 spec: selector: matchLabels: type: app2 replicas: 2 strategy: type: RollingUpdate minReadySeconds: 10 template: metadata: labels: type: app2 spec: containers: - name: container image: kubetm/app:v1 terminationGracePeriodSeconds: 0  Service apiVersion: v1 kind: Service metadata: name: svc-2 spec: selector: type: app2 ports: - port: 8080 protocol: TCP targetPort: 8080  Command while true; do curl 10.</description>
    </item>
    
    <item>
      <title>Replication Controller, ReplicaSet</title>
      <link>https://kubetm.github.io/practice/beginner/controller-replicationcontroller_replicaset/</link>
      <pubDate>Thu, 07 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/practice/beginner/controller-replicationcontroller_replicaset/</guid>
      <description> 1) Template, Replicas Pod apiVersion: v1 kind: Pod metadata: name: pod1 labels: type: web spec: containers: - name: container image: kubetm/app:v1 terminationGracePeriodSeconds: 0  ReplicaSet apiVersion: apps/v1 kind: ReplicaSet metadata: name: replica1 spec: replicas: 1 selector: matchLabels: type: web template: metadata: name: pod1 labels: type: web spec: containers: - name: container image: kubetm/app:v1 terminationGracePeriodSeconds: 0  2) Updating Controller ReplicationController -&amp;gt; ReplicaSet
ReplicationController apiVersion: v1 kind: ReplicationController metadata: name: replication1 spec: replicas: 2 selector: cascade: &amp;quot;false&amp;quot; template: metadata: labels: cascade: &amp;quot;false&amp;quot; spec: containers: - name: container image: kubetm/app:v1  kubectl kubectl delete replicationcontrollers replication1 --cascade=false  ReplicaSet apiVersion: apps/v1 kind: ReplicaSet metadata: name: replica2 spec: replicas: 2 selector: matchLabels: cascade: &amp;quot;false&amp;quot; template: metadata: labels: cascade: &amp;quot;false&amp;quot; spec: containers: - name: container image: kubetm/app:v1  3) Selector ReplicaSet apiVersion: apps/v1 kind: ReplicaSet metadata: name: replica1 spec: replicas: 1 selector: matchLabels: type: web ver: v1 matchExpressions: - {key: type, operator: In, values: [web]} - {key: ver, operator: Exists} template: metadata: labels: type: web ver: v1 location: dev spec: containers: - name: container image: kubetm/app:v1 terminationGracePeriodSeconds: 0  Pod apiVersion: v1 kind: Pod metadata: name: pod-node-affinity1 spec: affinity: nodeAffinity: requiredDuringSchedulingIngnoredDuringExecution: nodeSelectorTerms: - matchExpressions: - {key: AZ-01, operator: Exists} containers: - name: container image: kubetm/init  </description>
    </item>
    
    <item>
      <title>Namespace, ResourceQuota, LimitRange</title>
      <link>https://kubetm.github.io/practice/beginner/object-namespace_resourcequota_limitrange/</link>
      <pubDate>Wed, 06 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/practice/beginner/object-namespace_resourcequota_limitrange/</guid>
      <description>1. Namespace  1-1) Namespace apiVersion: v1 kind: Namespace metadata: name: nm-1  1-2) Pod apiVersion: v1 kind: Pod metadata: name: pod-1 namespace: nm-1 labels: app: pod spec: containers: - name: container image: kubetm/app ports: - containerPort: 8080  1-3) Service apiVersion: v1 kind: Service metadata: name: svc-1 namespace: nm-1 spec: selector: app: pod ports: - port: 9000 targetPort: 8080  pod ip :
curl 10.16.36.115:8080/hostname  service ip :</description>
    </item>
    
    <item>
      <title>ConfigMap, Secret</title>
      <link>https://kubetm.github.io/practice/beginner/object-configmap_secret/</link>
      <pubDate>Tue, 05 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/practice/beginner/object-configmap_secret/</guid>
      <description>1. Env (Literal)  1-1) ConfigMap apiVersion: v1 kind: ConfigMap metadata: name: cm-dev data: SSH: &#39;false&#39; User: dev  1-2) Secret apiVersion: v1 kind: Secret metadata: name: sec-dev data: Key: MTIzNA==  1-3) Pod apiVersion: v1 kind: Pod metadata: name: pod-1 spec: containers: - name: container image: kubetm/init envFrom: - configMapRef: name: cm-dev - secretRef: name: sec-dev   
2. Env (File)  2-1) Configmap echo &amp;quot;Content&amp;quot; &amp;gt;&amp;gt; file-c.</description>
    </item>
    
    <item>
      <title>Volume</title>
      <link>https://kubetm.github.io/practice/beginner/object-volume/</link>
      <pubDate>Mon, 04 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/practice/beginner/object-volume/</guid>
      <description>1. emptyDir  1-1) Pod apiVersion: v1 kind: Pod metadata: name: pod-volume-1 spec: containers: - name: container1 image: kubetm/init volumeMounts: - name: empty-dir mountPath: /mount1 - name: container2 image: kubetm/init volumeMounts: - name: empty-dir mountPath: /mount2 volumes: - name : empty-dir emptyDir: {}  mount | grep mount1 echo &amp;quot;file context&amp;quot; &amp;gt;&amp;gt; file.txt   
2. hostPath  2-1) Pod apiVersion: v1 kind: Pod metadata: name: pod-volume-3 spec: nodeSelector: kubernetes.</description>
    </item>
    
    <item>
      <title>Service</title>
      <link>https://kubetm.github.io/practice/beginner/object-service/</link>
      <pubDate>Sun, 03 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/practice/beginner/object-service/</guid>
      <description>1. ClusterIP  1-1) Pod apiVersion: v1 kind: Pod metadata: name: pod-1 labels: app: pod spec: nodeSelector: kubernetes.io/hostname: k8s-node1 containers: - name: container image: kubetm/app ports: - containerPort: 8080  1-2) Service apiVersion: v1 kind: Service metadata: name: svc-1 spec: selector: app: pod ports: - port: 9000 targetPort: 8080  curl 10.104.103.107:9000/hostname   
2. NodePort  Service apiVersion: v1 kind: Service metadata: name: svc-2 spec: selector: app: pod ports: - port: 9000 targetPort: 8080 nodePort: 30000 type: NodePort externalTrafficPolicy: Local  3.</description>
    </item>
    
    <item>
      <title>Pod</title>
      <link>https://kubetm.github.io/practice/beginner/object-pod/</link>
      <pubDate>Sat, 02 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/practice/beginner/object-pod/</guid>
      <description>1. Container  1-1) Pod apiVersion: v1 kind: Pod metadata: name: pod-1 spec: containers: - name: container1 image: kubetm/p8000 ports: - containerPort: 8000 - name: container2 image: kubetm/p8080 ports: - containerPort: 8080  1-2) ReplicationController apiVersion: v1 kind: ReplicationController metadata: name: replication-1 spec: replicas: 1 selector: app: rc template: metadata: name: pod-1 labels: app: rc spec: containers: - name: container image: kubetm/init   
2. Label  2-1) Pod apiVersion: v1 kind: Pod metadata: name: pod-2 labels: type: web lo: dev spec: containers: - name: container image: kubetm/init  2-2) Service apiVersion: v1 kind: Service metadata: name: svc-1 spec: selector: type: web ports: - port: 8080</description>
    </item>
    
    <item>
      <title>11월 진행사항</title>
      <link>https://kubetm.github.io/plan/2019_11/</link>
      <pubDate>Fri, 01 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/plan/2019_11/</guid>
      <description>-29일- [중급편] Volume - Dynamic Provisioning, StorageClass, Status, ReclaimPolicy PPT 100% Blog 100% Recording 50%
 이론강의 제작 및 Inflearn 업로드   [초급편] Blog 실습자료 내용 보강  Pod  
-28일- [중급편] Volume - Dynamic Provisioning, StorageClass, Status, ReclaimPolicy PPT 100% Blog 100% Recording 20%
 이론 강의 스크립트 정리  Blog 강의 히스토리 항목 추가  히스토리 내용 정리 (11월)  
-27일- [중급편] Volume - Dynamic Provisioning, StorageClass, Status, ReclaimPolicy PPT 100% Blog 100% Recording 0%</description>
    </item>
    
    <item>
      <title>Getting-started Kubernetes</title>
      <link>https://kubetm.github.io/practice/beginner/gettingstarted-kubernetes/</link>
      <pubDate>Fri, 01 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/practice/beginner/gettingstarted-kubernetes/</guid>
      <description>1. Linux  1-1) hello.js var http = require(&#39;http&#39;); var content = function(req, resp) { resp.end(&amp;quot;Hello Kubernetes!&amp;quot; + &amp;quot;\n&amp;quot;); resp.writeHead(200); } var w = http.createServer(content); w.listen(8000);  node hello.js   
2. Docker  2-1) Dockerfile FROM node:slim EXPOSE 8000 COPY hello.js . CMD node hello.js  2-2) Docker Hub Site https://hub.docker.com/
2-3) Docker Container Run docker build -t kubetm/hello . -t : 레파지토리/이미지명:버전 docker images docker run -d -p 8100:8000 kubetm/hello -d : 백그라운드 모드 -p : 포트변경 docker ps docker exec -it c403442e8a59 /bin/bash  2-4) Docker Image Push docker login docker push kubetm/hello</description>
    </item>
    
    <item>
      <title>10월 진행사항</title>
      <link>https://kubetm.github.io/plan/2019_10/</link>
      <pubDate>Tue, 01 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/plan/2019_10/</guid>
      <description>-31일- [부록 (설치)] Case2 [내PC+VirtualBox] 실습 PPT 100% Test 100% Recording 0%
 강의자료 정리 및 테스트 완료  [부록 (설치)] Case2 [내PC+VirtualBox] PPT 100% Recording 100%
 강의 자료준비 및 영상제작완료  [부록 (설치)] Case1 [서버전용] 실습 PPT 100% Test 100% Recording 100%
 Dahsboard 설치 부분 재녹음  
-30일- [부록 (설치)] Kubernetes 설치 개요 PPT 100% Recording 100%
 영상제작 완료  [부록 (설치)] Case1 [서버전용] 실습 PPT 100% Recording 100%</description>
    </item>
    
    <item>
      <title>9월 진행사항</title>
      <link>https://kubetm.github.io/plan/2019_09/</link>
      <pubDate>Sun, 01 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/plan/2019_09/</guid>
      <description>-30일- [중급편] Pod - Lifecycle PPT 100% Recording 20%
 강의할 PPT 자료 및 내용 정리 완료 녹음 준비   
-27일- [중급편] Pod - Lifecycle PPT 80% Recording 0%
 강의할 PPT 자료 및 내용 정리   
-25일- [부록] Kubernetes 설치 개요 PPT 120% Github 100% Test 100% Recording 100%
 실습영상 편집 후 업로드  
-24일- [부록] Kubernetes 설치 개요 PPT 120% Github 100% Test 100% Recording 80%</description>
    </item>
    
  </channel>
</rss>