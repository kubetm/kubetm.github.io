<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>KubeTM Blog with Kubernetes</title>
    <link>https://kubetm.github.io/</link>
    <description>Recent content on KubeTM Blog with Kubernetes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 01 Dec 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://kubetm.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>12월 진행사항</title>
      <link>https://kubetm.github.io/plan/2020_12/</link>
      <pubDate>Tue, 01 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/plan/2020_12/</guid>
      <description>-6일- [아키텍쳐편] Component PPT 100% Blog 100% Recording 100%
 녹음 및 편집, 그리고 업로드 완료   
-5일- [아키텍쳐편] Component PPT 100% Blog 100% Recording 50%
 이론 스크립팅 완료  
-3일- [아키텍쳐편] Component PPT 100% Blog 100% Recording 0%
 이론 강의완료 및 블로그 업데이트</description>
    </item>
    
    <item>
      <title>11월 진행사항</title>
      <link>https://kubetm.github.io/plan/2020_11/</link>
      <pubDate>Thu, 05 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/plan/2020_11/</guid>
      <description>-27일- [아키텍쳐편] Component PPT 100% Blog 0% Recording 0%
 편집 및 업로드   
-23일- [아키텍쳐편] Component PPT 60% Blog 0% Recording 0%
 편집 및 업로드   
-18일- [아키텍쳐편] Component PPT 30% Blog 0% Recording 0%
 편집 및 업로드   
-8일- [아키텍쳐편] Logging PPT 100% Blog 100% Recording 100%
 편집 및 업로드   
-6일- [아키텍쳐편] Logging PPT 100% Blog 100% Recording 80%</description>
    </item>
    
    <item>
      <title>10월 진행사항</title>
      <link>https://kubetm.github.io/plan/2020_10/</link>
      <pubDate>Mon, 05 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/plan/2020_10/</guid>
      <description>-31일- [아키텍쳐편] Logging PPT 100% Blog 90% Recording 50%
 편집 및 업로드   
-28일- [아키텍쳐편] Logging PPT 100% Blog 90% Recording 40%
 이론편 녹음  
-21일- [아키텍쳐편] Logging PPT 100% Blog 90% Recording 20%
 블로그 업데이트 및 이론편 스크립트 작성  
-19일- [아키텍쳐편] Logging PPT 100% Blog 80% Recording 10%
 블로그 업데이트 및 이론편 스크립트 작성  
-15일- [아키텍쳐편] Logging PPT 100% Blog 70% Recording 0%</description>
    </item>
    
    <item>
      <title>9월 진행사항</title>
      <link>https://kubetm.github.io/plan/2020_09/</link>
      <pubDate>Sat, 05 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/plan/2020_09/</guid>
      <description>-29일- [아키텍쳐편] Logging/Monitoring PPT 40% Blog 0% Recording 0%
 이론내용 정리    
-25일- [아키텍쳐편] Logging/Monitoring PPT 30% Blog 0% Recording 0%
 이론내용 정리    
-23일- [아키텍쳐편] Logging/Monitoring PPT 10% Blog 0% Recording 0%
 이론내용 정리  
-20일- [아키텍쳐편] Networking PPT 100% Blog 100% Recording 100%
 실습 편집 및 업로드   
-19일- [아키텍쳐편] Networking PPT 100% Blog 100% Recording 90%</description>
    </item>
    
    <item>
      <title>8월 진행사항</title>
      <link>https://kubetm.github.io/plan/2020_08/</link>
      <pubDate>Wed, 05 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/plan/2020_08/</guid>
      <description>-28일- [아키텍쳐편] Networking PPT 70% Blog 40% Recording 0%
 이론편 내용 정리 및 블로그 업데이트   
-25일- [아키텍쳐편] Networking PPT 60% Blog 0% Recording 0%
 이론편 내용 정리   
-19일- [아키텍쳐편] Networking PPT 30% Blog 0% Recording 0%
 이론편 내용 정리   
-8일- [아키텍쳐편] Storage PPT 100% Blog 100% Recording 100%
 실습편 편집 및 업로드</description>
    </item>
    
    <item>
      <title>7월 진행사항</title>
      <link>https://kubetm.github.io/plan/2020_07/</link>
      <pubDate>Sun, 05 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/plan/2020_07/</guid>
      <description>-29일- [아키텍쳐편] Storage PPT 100% Blog 100% Recording 50%
 이론편 강의 편집 및 업로드   
-27일- [아키텍쳐편] Storage PPT 100% Blog 100% Recording 30%
 이론편 강의 녹음  
-22일- [아키텍쳐편] Storage PPT 100% Blog 100% Recording 20%
 이론편 강의 스크립트 작성  
-21일- [아키텍쳐편] Storage PPT 100% Blog 100% Recording 0%
 실습내용 블로그 업로드  
-16일- [아키텍쳐편] Storage PPT 100% Blog 50% Recording 0%</description>
    </item>
    
    <item>
      <title>Case 5. 내PC &#43; VirtualBox (Network: NatNetwork &#43; Host-Only)</title>
      <link>https://kubetm.github.io/practice/appendix/installation_case5/</link>
      <pubDate>Sun, 21 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/practice/appendix/installation_case5/</guid>
      <description>쿠버네티스 1.19 버전의 설치 방법으로써 설치시 영상 강의 UI와 약간의 차이가 있을 수 있습니다.  VM 생성시 노트북에 연결되어 있는 공유기로부터 IP를 할당 받을 수 없는 경우 Virtualbox로부터 VM끼리 통신할 수 있는 가상의 네트워크를 생성하는 방법입니다.  
전체 네트워크 구성   - NatNetwork : k8s-Master와 k8s-Node들간에 통신역할 및 인터넷으로부터 파일을 다운로드 받을 수 있게 해주는 역할  - VirtualBox Host-Only : 내 Host OS에서 각 Guest OS에 연결 할 수 있도록 해주는 역할</description>
    </item>
    
    <item>
      <title>Kubernetes CNCF Webinar</title>
      <link>https://kubetm.github.io/info/youtube-kubernetes_cncf_webinar/</link>
      <pubDate>Sun, 21 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/info/youtube-kubernetes_cncf_webinar/</guid>
      <description>Youtube URL : https://www.youtube.com/channel/UCvqbFHwN-nwalWPjPUKpvTA   
Multi-Tenant Kubernetes Cluser를 운영하기 위해 고려할 사항    Namespace per Tenant Node per Tenant Cluster per Tenant</description>
    </item>
    
    <item>
      <title>6월 진행사항</title>
      <link>https://kubetm.github.io/plan/2020_06/</link>
      <pubDate>Sat, 06 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/plan/2020_06/</guid>
      <description> -22일- [설치] 1.18 버전 쿠버네티스 설치 자료실 업데이트  VirtualBox Network : NatNetwork 모드 + Host Only 모드  
-10일- [설치] 1.18 버전 쿠버네티스 설치 자료실 업데이트  VirtualBox Network : Bridge 모드   
-6일- [CKA] 1.18 버전 업데이트  1.18 링크 페이지 수정 Deployment 생성 명령 수정  </description>
    </item>
    
    <item>
      <title>Case 4. 내PC &#43; VirtualBox (Network: Bridge)</title>
      <link>https://kubetm.github.io/practice/appendix/installation_case4/</link>
      <pubDate>Mon, 01 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/practice/appendix/installation_case4/</guid>
      <description>쿠버네티스 1.19 버전의 설치 방법으로써 설치시 영상 강의 UI와 약간의 차이가 있을 수 있습니다.  VM 생성시 노트북에 연결되어 있는 공유기로부터 IP를 할당 받을 수 있을 경우의 설치 방법입니다.  
 1-1) Install Virtualbox 1-1-1) virtualbox 다운로드 및 설치 [윈도우10 버전으로 진행] 아래 경로에서 [Windows hosts] 클릭 하여 다운로드 후 설치 (별다른 변경없이 Next만 함)  &amp;gt;https://www.virtualbox.org/wiki/Downloads

Mac 사용자 참고 URL  &amp;gt;https://www.virtualbox.org/wiki/Mac%20OS%20X%20build%20instructions

1-1-2) CentOS Download 아래 경로로 들어가서 원하는 경로에서 Minimal 버전의 파일 다운로드  &amp;gt;http://isoredirect.</description>
    </item>
    
    <item>
      <title>Kubernetes Dashboard</title>
      <link>https://kubetm.github.io/practice/intermediate/object-dashboard/</link>
      <pubDate>Sun, 26 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/practice/intermediate/object-dashboard/</guid>
      <description>1. Dashboard 2.0.0 설치  
1-1) Dashboard 설치 kubetm 가이드로 Dashboard(1.10.1)를 설치했을 경우 아래 명령으로 삭제
kubectl delete -f https://raw.githubusercontent.com/kubetm/kubetm.github.io/master/sample/practice/appendix/gcp-kubernetes-dashboard.yaml  새 Dashboard (2.0.0) 설치 - https://github.com/kubernetes/dashboard
kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.0/aio/deploy/recommended.yaml  
1-2) ClusterRoleBinding 생성 cat &amp;lt;&amp;lt;EOF | kubectl create -f - apiVersion: rbac.authorization.k8s.io/v1beta1 kind: ClusterRoleBinding metadata: name: kubernetes-dashboard2 labels: k8s-app: kubernetes-dashboard roleRef: apiGroup: rbac.authorization.k8s.io kind: ClusterRole name: cluster-admin subjects: - kind: ServiceAccount name: kubernetes-dashboard namespace: kubernetes-dashboard EOF</description>
    </item>
    
    <item>
      <title>Authentication</title>
      <link>https://kubetm.github.io/practice/intermediate/object-authentication/</link>
      <pubDate>Fri, 24 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/practice/intermediate/object-authentication/</guid>
      <description>1. X509 Client Certs  1-1) kubeconfig 인증서 확인 Path : /etc/kubernetes/admin.conf
cluster.certificate-authority-data : CA.crt (Base64) user.client-certificate-data: Client.crt (Base64) user.client-key-data: Client.key (Base64)  grep &#39;client-certificate-data&#39; /etc/kubernetes/admin.conf | head -n 1 | awk &#39;{print $2}&#39; | base64 -d grep &#39;client-key-data&#39; /etc/kubernetes/admin.conf | head -n 1 | awk &#39;{print $2}&#39; | base64 -d  
1-2) Https API (Client.crt, Client.key) case1) postman
https://192.168.0.30:6443/api/v1/nodes  Settings &amp;gt; General &amp;gt; SSL certificate verification &amp;gt; OFF Settings &amp;gt; Certificates &amp;gt; Client Certificates &amp;gt; Host, CRT file, KEY file  case2) curl</description>
    </item>
    
    <item>
      <title>Authorization</title>
      <link>https://kubetm.github.io/practice/intermediate/object-authorization/</link>
      <pubDate>Fri, 24 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/practice/intermediate/object-authorization/</guid>
      <description>1. 자신의 Namespace 내에 Pod들만 조회할 수 있는 권한  1-1) Role apiVersion: rbac.authorization.k8s.io/v1 kind: Role metadata: name: r-01 namespace: nm-01 rules: - apiGroups: [&amp;quot;&amp;quot;] verbs: [&amp;quot;get&amp;quot;, &amp;quot;list&amp;quot;] resources: [&amp;quot;pods&amp;quot;]  1-2) RoleBinding apiVersion: rbac.authorization.k8s.io/v1 kind: RoleBinding metadata: name: rb-01 namespace: nm-01 roleRef: apiGroup: rbac.authorization.k8s.io kind: Role name: r-01 subjects: - kind: ServiceAccount name: default namespace: nm-01  1-3) Service apiVersion: v1 kind: Service metadata: name: svc-1 spec: selector: app: pod ports: - port: 8080 targetPort: 8080  1-4) Https API 호출 (Token) case1) postman</description>
    </item>
    
    <item>
      <title>4월 진행사항</title>
      <link>https://kubetm.github.io/plan/2020_04/</link>
      <pubDate>Tue, 14 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/plan/2020_04/</guid>
      <description>-29일- [중급편] Accessing API - Overview [중급편] Authorization - RBAC, Role, RoleBinding [중급편] Authentication - X509 Certs, Kubectl, ServiceAccount [중급편] Accessing API - Dashboard PPT 100% Blog 100% Recording 100%
 실습 강의 녹음 및 업로드 완료   
-28일- [중급편] Accessing API - Overview [중급편] Authorization - RBAC, Role, RoleBinding [중급편] Authentication - X509 Certs, Kubectl, ServiceAccount [중급편] Accessing API - Dashboard PPT 100% Blog 100% Recording 50%</description>
    </item>
    
    <item>
      <title>CKA 자격증 개요</title>
      <link>https://kubetm.github.io/practice/cka/ready/</link>
      <pubDate>Mon, 13 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/practice/cka/ready/</guid>
      <description>시험 접수 및 기본 정보 * 시험비 : 300불 재시험 기회 1번 포함  접수 : https://training.linuxfoundation.org/certification/certified-kubernetes-administrator-cka/ 할인 쿠폰 :
구글 검색에 [cka exam coupon code] 키워드로 검색하면 최소 30%는 찾을 수 있음 ex: KUBERNETES30, ANYWHERE30   
* 버전 : 꼭 버전 확인! 해당 내용은 1.17 기준 
* 시험시간 : 3시간 
* 시험문항 : 24문항 난이도에 따라 1점 ~ 9점, 모두 실습 형태</description>
    </item>
    
    <item>
      <title>Kubernetes Forum Seoul 2019</title>
      <link>https://kubetm.github.io/info/youtube-kubernetes_forum_seoul1-2019/</link>
      <pubDate>Tue, 24 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/info/youtube-kubernetes_forum_seoul1-2019/</guid>
      <description>Site URL : https://events19.linuxfoundation.org/events/kubernetes-forum-seoul-2019/ Youtube URL : https://www.youtube.com/playlist?list=PLj6h78yzYM2OxLtNu5THSdKUj5vC_Thco/   
The Secret Recipe of etcd    Raft Consensus Algorithm failures and tuning   
Improving Monitoring Systems Interoperability with Prometheus, OpenMetrics    Interoperability with OpenMetrics Prometheus OpenMetrics   
Re-architecting Data Platform with Spark    Data Platform Deployment-helm Analytics-spark, jupyterhub, superset Access Control   
Running gRPC Services for Serving Legacy RESTful API    why gRPC How to Support both gRPC/REST-envoy Deploying service using transcoding</description>
    </item>
    
    <item>
      <title>AutoScaler - HPA</title>
      <link>https://kubetm.github.io/practice/intermediate/controller-autoscaler_hpa/</link>
      <pubDate>Tue, 10 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/practice/intermediate/controller-autoscaler_hpa/</guid>
      <description>1. Metrics Server 설치 1-1) Metrics Server 다운 및 설치 설치
kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/download/v0.3.6/components.yaml   Metrics Deployment 수정 (args 에 kubelet-insecure-tls 와 kubelet-preferred-address-types=InternalIP 추가)
kubectl edit deployment metrics-server -n kube-system ------------------------ spec: containers: - args: - --cert-dir=/tmp - --secure-port=4443 - --kubelet-insecure-tls - --kubelet-preferred-address-types=InternalIP image: k8s.gcr.io/metrics-server-amd64:v0.3.6 imagePullPolicy: IfNotPresent name: metrics-server ------------------------   설치 확인 (True값 확인)
kubectl get apiservices |egrep metrics ------------------------ v1beta1.metrics.k8s.io kube-system/metrics-server True 28m ------------------------   메트릭 값 확인 (1~2분 후)</description>
    </item>
    
    <item>
      <title>3월 진행사항</title>
      <link>https://kubetm.github.io/plan/2020_03/</link>
      <pubDate>Tue, 03 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/plan/2020_03/</guid>
      <description>-20일- 개인적으로 CKA 시험 공부에 시간을 할애하기 위해 잠시 강의 연재를 멈추고 4월 14일부터 재개할 에정입니다.  
-19일- [중급편 연재] Controller - Autoscaler(HPA) PPT 100% Blog 100% Recording 100%
 실습 편집 및 업로드   
-18일- [중급편 연재] Controller - Autoscaler(HPA) PPT 100% Blog 100% Recording 80%
 실습 스크립트 작성 및 녹음  
-17일- [중급편 연재] Controller - Autoscaler(HPA) PPT 100% Blog 100% Recording 60%</description>
    </item>
    
    <item>
      <title>Kubernetes 관련 즐겨찾기</title>
      <link>https://kubetm.github.io/info/kubernetes/</link>
      <pubDate>Sat, 22 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/info/kubernetes/</guid>
      <description>Kubernetes  Kubernetes : https://kubernetes.io/ Kubectl Reference : https://kubernetes.io/docs/reference/generated/kubectl/kubectl-commands Github for Java Client : https://github.com/kubernetes-client/java API Doc for 1.15 : http://kubernetes.io/docs/reference/generated/kubernetes-api/v1.15/    
Plugins  
Helm  Helm : https://helm.sh/ Helm Hub : https://hub.helm.sh/   
Docker</description>
    </item>
    
    <item>
      <title>Pod - Node Scheduling</title>
      <link>https://kubetm.github.io/practice/intermediate/pod-node_scheduling/</link>
      <pubDate>Wed, 19 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/practice/intermediate/pod-node_scheduling/</guid>
      <description>1. Node Affinity  1-1) Node Labeling kubectl label nodes k8s-node1 kr=az-1 kubectl label nodes k8s-node2 us=az-1  1-2) MatchExpressions apiVersion: v1 kind: Pod metadata: name: pod-match-expressions1 spec: affinity: nodeAffinity: requiredDuringSchedulingIgnoredDuringExecution: nodeSelectorTerms: - matchExpressions: - {key: kr, operator: Exists} containers: - name: container image: tmkube/app terminationGracePeriodSeconds: 0  1-3) Required apiVersion: v1 kind: Pod metadata: name: pod-required spec: affinity: nodeAffinity: requiredDuringSchedulingIgnoredDuringExecution: nodeSelectorTerms: - matchExpressions: - {key: ch, operator: Exists} containers: - name: container image: tmkube/app terminationGracePeriodSeconds: 0  1-4) Preferred apiVersion: v1 kind: Pod metadata: name: pod-preferred spec: affinity: nodeAffinity: preferredDuringSchedulingIgnoredDuringExecution: - weight: 1 preference: matchExpressions: - {key: ch, operator: Exists} containers: - name: container image: tmkube/app terminationGracePeriodSeconds: 0</description>
    </item>
    
    <item>
      <title>2월 진행사항</title>
      <link>https://kubetm.github.io/plan/2020_02/</link>
      <pubDate>Mon, 03 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/plan/2020_02/</guid>
      <description>-28일- [중급편 연재] Pod - Node Scheduling PPT 120% Blog 100% Recording 70%
 실습편 내용 스크립팅  
-27일- [중급편 연재] Pod - Node Scheduling PPT 120% Blog 100% Recording 50%
 이론강좌 편집 및 업로드   
-26일- [중급편 연재] Pod - Node Scheduling PPT 120% Blog 100% Recording 40%
 이론강좌 녹음  
-25일- [중급편 연재] Pod - Node Scheduling PPT 120% Blog 100% Recording 30%</description>
    </item>
    
    <item>
      <title>Ingress</title>
      <link>https://kubetm.github.io/practice/intermediate/new-ingress/</link>
      <pubDate>Mon, 20 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/practice/intermediate/new-ingress/</guid>
      <description>1. Nginx Controller  1-1) Nginx 설치 kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/nginx-0.27.1/deploy/static/mandatory.yaml  1-2) NodePort Service 생성 kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/nginx-0.27.1/deploy/static/provider/baremetal/service-nodeport.yaml  
2. Service Loadbalancing  2-1) Shopping Page apiVersion: v1 kind: Pod metadata: name: pod-shopping labels: category: shopping spec: containers: - name: container image: kubetm/shopping --- apiVersion: v1 kind: Service metadata: name: svc-shopping spec: selector: category: shopping ports: - port: 8080  2-2) Customer Center apiVersion: v1 kind: Pod metadata: name: pod-customer labels: category: customer spec: containers: - name: container image: kubetm/customer --- apiVersion: v1 kind: Service metadata: name: svc-customer spec: selector: category: customer ports: - port: 8080  2-3) Order Service apiVersion: v1 kind: Pod metadata: name: pod-order labels: category: order spec: containers: - name: container image: kubetm/order --- apiVersion: v1 kind: Service metadata: name: svc-order spec: selector: category: order ports: - port: 8080  2-4) Ingress apiVersion: networking.</description>
    </item>
    
    <item>
      <title>Kubernetes 관련 도서</title>
      <link>https://kubetm.github.io/info/book/</link>
      <pubDate>Mon, 06 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/info/book/</guid>
      <description>Kubernetes IN ACTION   방대한 분량임에도 불구하고 버릴 내용이 하나도 없음 시간이 되서 3번정도 정독한다면 제 강의는 들을 필요 없어요 ^^ 처음 쿠버네티스를 시작하거나 시간적인 여부가 있는 분들께 권장 Example Github : https://github.com/luksa/kubernetes-in-action   
쿠버네티스 패턴   쿠버네티스 기본오브젝트들에 대해 어느정도 알고 있는 분들이 읽으면 좋은책 번역이 잘되있어서 읽기가 편함 실무에서 쿠버네티스를 쓰게 됐을때 한번쯤 고민하게 되는 부분들을 다루고 있어서 매우 유익한 책입니다.   개인적인 의견이며, 삭제 요청시 kube.</description>
    </item>
    
    <item>
      <title>1월 진행사항</title>
      <link>https://kubetm.github.io/plan/2020_01/</link>
      <pubDate>Sat, 04 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/plan/2020_01/</guid>
      <description>-31일- [중급편 연재] Ingress PPT 100% Blog 90% Recording 90%
 실습 녹음  
-30일- [중급편 연재] Ingress PPT 100% Blog 90% Recording 70%
 실습 스크립트 작성  
-29일- [중급편 연재] Ingress PPT 100% Blog 90% Recording 50%
 편집 및 업로드   
-28일- [중급편 연재] Ingress PPT 100% Blog 90% Recording 40%
 이론 스크립팅 및 녹음  
-24 ~ 27일-  설 연휴</description>
    </item>
    
    <item>
      <title>Kubernetes 관련 블로그</title>
      <link>https://kubetm.github.io/info/blog/</link>
      <pubDate>Fri, 03 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/info/blog/</guid>
      <description>그동안 쿠버네티스를 공부하면서 즐겨찾기를 해놨던 블로그들인데, 다들 너무 도움이 되는 내용들이고 자신의 이해도에 맞는 블로그들을 참조하시면 좋습니다^^

조대협의 블로그    내용도 좋지만 트랜드나 기술에 대한 정보들이 가장 빨리 업데이트 됩니다.   
alice_k106    쿠버네티스 전 범위를 다루고 있지는 않지만, 포스트된 주제에 대해서는 가장 깊히 있게 배울 수 있는 것 같아요.   
아리수    많은 범위를 다루고 있고, 주제마다 내용도 간결합니다.</description>
    </item>
    
    <item>
      <title>Kubernetes 관련 커뮤니티</title>
      <link>https://kubetm.github.io/info/community/</link>
      <pubDate>Fri, 03 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/info/community/</guid>
      <description>   
Kubernetes Korea Group    쿠버네티스 관련 많은 전문가들께서 활동하고 계시고 각종 행사나 이슈들이 공유됨 대한민국 넘버원 커뮤니티라고 생각함  
참고
 글로벌 커뮤니티1 : https://www.facebook.com/groups/kubernetes.users 글로벌 커뮤니티2 : https://www.facebook.com/kubernetesio/  
  개인적인 의견이며, 삭제 요청시 kube.taemin@gmail.com로 연락바랍니다.  </description>
    </item>
    
    <item>
      <title>StatefulSet</title>
      <link>https://kubetm.github.io/practice/intermediate/new-statefulset/</link>
      <pubDate>Tue, 24 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/practice/intermediate/new-statefulset/</guid>
      <description>1. StatefulSet Controller  1-1) ReplicaSet apiVersion: apps/v1 kind: ReplicaSet metadata: name: replica-web spec: replicas: 1 selector: matchLabels: type: web template: metadata: labels: type: web spec: containers: - name: container image: kubetm/app terminationGracePeriodSeconds: 10  1-2) StatefulSet apiVersion: apps/v1 kind: StatefulSet metadata: name: stateful-db spec: replicas: 1 selector: matchLabels: type: db template: metadata: labels: type: db spec: containers: - name: container image: kubetm/app terminationGracePeriodSeconds: 10</description>
    </item>
    
    <item>
      <title>GoogleCloud Summit Seoul 2019</title>
      <link>https://kubetm.github.io/info/youtube-googlecloud-2019/</link>
      <pubDate>Mon, 23 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/info/youtube-googlecloud-2019/</guid>
      <description>Site URL : https://inthecloud.withgoogle.com/summit-sel-19/home.html Youtube URL : https://www.youtube.com/watch?v=ZkKgyXDc1lQ&amp;amp;list=PLBgogxgQVM9tS7Yhzjc3Wt56jc5j-z_4C   
한 번 빌드해 Anthos로 클라우드와 온프레미스에서 구동하기    Kubernetes, MicroService, Istio Knative Anthos SKAFFOLD   
Cloud, Journey to Right Things.    Cloud, 기업의 대표적인 고민, 왜 사용해야 할까요? Why Google Cloud? 도입을 위한 지침서   
Google Cloud Platform에서의 Istio    Istio   
마이크로서비스, 그리고 서비스 메시    서비스 메시 과정 데모</description>
    </item>
    
    <item>
      <title>Pod</title>
      <link>https://kubetm.github.io/practice/intermediate/pod-probe/</link>
      <pubDate>Mon, 16 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/practice/intermediate/pod-probe/</guid>
      <description>1. ReadinessProbe  1-1) Service apiVersion: v1 kind: Service metadata: name: svc-readiness spec: selector: app: readiness ports: - port: 8080 targetPort: 8080  1-2) Pod apiVersion: v1 kind: Pod metadata: name: pod1 labels: app: readiness spec: containers: - name: container image: kubetm/app ports: - containerPort: 8080	terminationGracePeriodSeconds: 0  while true; do date &amp;amp;&amp;amp; curl 10.97.190.80:8080/hostname; sleep 1; done  1-3) Pod apiVersion: v1 kind: Pod metadata: name: pod-readiness-exec1 labels: app: readiness spec: containers: - name: readiness image: kubetm/app ports: - containerPort: 8080	readinessProbe: exec: command: [&amp;quot;cat&amp;quot;, &amp;quot;/readiness/ready.</description>
    </item>
    
    <item>
      <title>Open Infrastructure &amp; Cloud Native Days Korea 2019</title>
      <link>https://kubetm.github.io/info/youtube-openinfra-2019/</link>
      <pubDate>Thu, 12 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/info/youtube-openinfra-2019/</guid>
      <description>Site URL : https://openinfradays.kr/ Youtube URL : https://www.youtube.com/channel/UCVQ1ILIOsGH-YX9FkEmkjRQ   
카카오 T 택시 사례를 통해 살펴보는 카카오 클라우드의 Kubernetes as a Service    Kubernetes를 도입하면 뭐가 좋아지나요? 카카오 T택시 시스템 구조 Canary 배포 멀티 클러스터 인증 통합, 사용자 ACL 자동화된 클러스터 라이프사이클 물리 인프라 자원 통합   
MSA, K8S를 이용한 대륙의 서비스 개발 사례 - 이랜드 차이나    왜 Docker를 선택했나?</description>
    </item>
    
    <item>
      <title>12월 진행사항</title>
      <link>https://kubetm.github.io/plan/2019_12/</link>
      <pubDate>Wed, 04 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/plan/2019_12/</guid>
      <description>-31일- [중급편 연재] StatefulSet PPT 100% Blog 90% Recording 50%
 이론 녹음/편집 후 업로드   -27일- [중급편 연재] StatefulSet PPT 100% Blog 90% Recording 20%
 이론 스크립트 작성  -25일- [중급편 연재] StatefulSet PPT 100% Blog 90% Recording 0%
 PPT 내용 정리 및 실습자료 Blog 업데이트   
-24일- [중급편 연재] StatefulSet PPT 80% Blog 30% Recording 0%
 PPT 내용 정리 및 실습자료 Blog 업데이트</description>
    </item>
    
    <item>
      <title>[인프런] 강좌 계획</title>
      <link>https://kubetm.github.io/plan/beginner/</link>
      <pubDate>Thu, 21 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/plan/beginner/</guid>
      <description>  
강의 범위  
강의 목차  </description>
    </item>
    
    <item>
      <title>[인프런] 강좌 계획</title>
      <link>https://kubetm.github.io/plan/intermediate/</link>
      <pubDate>Thu, 21 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/plan/intermediate/</guid>
      <description>  
강의 범위  
강의 목차  </description>
    </item>
    
    <item>
      <title>Volume</title>
      <link>https://kubetm.github.io/practice/intermediate/object-volume/</link>
      <pubDate>Thu, 21 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/practice/intermediate/object-volume/</guid>
      <description>1. 사전 구성 - StorageOS 설치 및 StorageClass 생성  1-1) StorageOS Operator 설치 설치
kubectl apply -f https://github.com/storageos/cluster-operator/releases/download/1.5.0/storageos-operator.yaml  설치 확인
kubectl get all -n storageos-operator  Depolyment 수정
kubectl edit deployments.apps storageos-cluster-operator -n storageos-operator  spec.containers.env의 DISABLE_SCHEDULER_WEBHOOK의 Value를 true로 설정
spec: containers: - command: - cluster-operator env: - name: DISABLE_SCHEDULER_WEBHOOK value: &amp;quot;false&amp;quot; # true 로 변경 image: storageos/cluster-operator:1.5.0 imagePullPolicy: IfNotPresent  관리 계정을 위한 Secret 생성 (username 및 password를 Base64문자로 만들기)</description>
    </item>
    
    <item>
      <title>Service</title>
      <link>https://kubetm.github.io/practice/intermediate/object-service/</link>
      <pubDate>Sat, 16 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/practice/intermediate/object-service/</guid>
      <description>Dns  Headless  Exteranl   
Headless  1-1) Service apiVersion: v1 kind: Service metadata: name: clusterip1 spec: selector: svc: clusterip ports: - port: 80 targetPort: 8080  1-2) Pod apiVersion: v1 kind: Pod metadata: name: pod1 labels: svc: clusterip spec: containers: - name: container image: kubetm/app  1-3) Request Pod apiVersion: v1 kind: Pod metadata: name: request-pod spec: containers: - name: container image: kubetm/init  kubectl exec request-pod -it /bin/bash  nslookup</description>
    </item>
    
    <item>
      <title>Case 3. 구글 클라우드 플랫폼</title>
      <link>https://kubetm.github.io/practice/appendix/installation_case3/</link>
      <pubDate>Tue, 12 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/practice/appendix/installation_case3/</guid>
      <description>2020-06-13 자료실 내용 업데이트 되었습니다. 기본적으로 영상을 따라가시면서 하시되 상세한 설정 내용은 자료실 내용을 참고 하시면 되세요.  
 1-1) Join GCP 1-1-1) Join 아래 사이트에 들어가서 상단에 [무료로 시작하기] 버튼 클릭  &amp;gt;https://cloud.google.com/

1) Country : South Korea 2) Terms of Service : 체크 후 [CONTINUE] 3) 이름 및 주소 확인 후 Payment method 입력  자신의 신용카드 번호를 입력하지만 크레딧을 다 소모하거나 12개월이 지나도 자동으로 결재가 되진 않습니다.</description>
    </item>
    
    <item>
      <title>Case 2. 내PC &#43; VirtualBox</title>
      <link>https://kubetm.github.io/practice/appendix/installation_case2/</link>
      <pubDate>Mon, 11 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/practice/appendix/installation_case2/</guid>
      <description>윈도우나 맥이 설치되어 있는 Desktop가 1대 있고, 그위에 VirtualBox와 같은 도구를 이용해서 VM을 만드는 경우   
 1-1) Install Virtualbox 1-1-1) virtualbox 다운로드 및 설치 [윈도우10 버전으로 진행] 아래 경로에서 [Windows hosts] 클릭 하여 다운로드 후 설치 (별다른 변경없이 Next만 함)  &amp;gt;https://www.virtualbox.org/wiki/Downloads

Mac 사용자 참고 URL  &amp;gt;https://www.virtualbox.org/wiki/Mac%20OS%20X%20build%20instructions

1-1-2) CentOS Download 아래 경로로 들어가서 원하는 경로에서 Minimal 버전의 파일 다운로드  &amp;gt;http://isoredirect.centos.org/centos/7/isos/x86_64/</description>
    </item>
    
    <item>
      <title>Case 1. 서버전용</title>
      <link>https://kubetm.github.io/practice/appendix/installation_case1/</link>
      <pubDate>Sun, 10 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/practice/appendix/installation_case1/</guid>
      <description>남는 Server나 Netebook이 1대 있고, 그 서버 자체를 처음부터 구성하는 경우 그 서버의 CentOS 설치부터 가이드 시작..   
 1-1) Install CentOS 1-1-1) CentOS 다운로드 아래 경로로 들어가서 원하는 경로에서 Minimal 버전의 파일 다운로드  &amp;gt;http://isoredirect.centos.org/centos/7/isos/x86_64/
1-1-2) Booting USB 만들기 아래 경로로 들어가면 중간 정도에 다운로드 버튼 있어요.  &amp;gt;https://rufus.ie/ko_KR.html  다운로드 후 실행
- 장치 : USB 선택 - 부트 선택 : 디스크 또는 ISO 이미지 [선택] 클릭 후 다운받은 파일 지정 - [시작]  1-1-3) CentOS 설치 (실습 동영상 화면은 VM설치 화면으로 대체했지만 실제로는 아래와 같이 하시면 되세요)  USB를 설치할 서버에 꼽고 부팅하면 CentOS 설치단계로 가져요  안되시는 분은 부팅 순서를 USB가 변경하셔야 됩니다.</description>
    </item>
    
    <item>
      <title>DaemonSet, Job, CronJob</title>
      <link>https://kubetm.github.io/practice/beginner/controller-daemonset_job_cronjob/</link>
      <pubDate>Sat, 09 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/practice/beginner/controller-daemonset_job_cronjob/</guid>
      <description>1. DaemonSet  1-1) DaemonSet - HostPort apiVersion: apps/v1 kind: DaemonSet metadata: name: daemonset-1 spec: selector: matchLabels: type: app template: metadata: labels: type: app spec: containers: - name: container image: kubetm/app ports: - containerPort: 8080 hostPort: 18080  Command curl 192.168.0.31:18080/hostname  
1-2) DaemonSet - NodeSelector apiVersion: apps/v1 kind: DaemonSet metadata: name: daemonset-2 spec: selector: matchLabels: type: app template: metadata: labels: type: app spec: nodeSelector: os: centos containers: - name: container image: kubetm/app ports: - containerPort: 8080  Kubectl Label Add</description>
    </item>
    
    <item>
      <title>Deployment</title>
      <link>https://kubetm.github.io/practice/beginner/controller-deployment/</link>
      <pubDate>Fri, 08 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/practice/beginner/controller-deployment/</guid>
      <description>1. ReCreate  1-1) Deployment apiVersion: apps/v1 kind: Deployment metadata: name: deployment-1 spec: selector: matchLabels: type: app replicas: 2 strategy: type: Recreate revisionHistoryLimit: 1 template: metadata: labels: type: app spec: containers: - name: container image: kubetm/app:v1 terminationGracePeriodSeconds: 10  
1-2) Service apiVersion: v1 kind: Service metadata: name: svc-1 spec: selector: type: app ports: - port: 8080 protocol: TCP targetPort: 8080  Command while true; do curl 10.</description>
    </item>
    
    <item>
      <title>Replication Controller, ReplicaSet</title>
      <link>https://kubetm.github.io/practice/beginner/controller-replicationcontroller_replicaset/</link>
      <pubDate>Thu, 07 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/practice/beginner/controller-replicationcontroller_replicaset/</guid>
      <description>1. Template, Replicas  1-1) Pod apiVersion: v1 kind: Pod metadata: name: pod1 labels: type: web spec: containers: - name: container image: kubetm/app:v1 terminationGracePeriodSeconds: 0  
1-2) ReplicaSet apiVersion: apps/v1 kind: ReplicaSet metadata: name: replica1 spec: replicas: 1 selector: matchLabels: type: web template: metadata: name: pod1 labels: type: web spec: containers: - name: container image: kubetm/app:v1 terminationGracePeriodSeconds: 0   
2. Updating Controller ReplicationController -&amp;gt; ReplicaSet</description>
    </item>
    
    <item>
      <title>Namespace, ResourceQuota, LimitRange</title>
      <link>https://kubetm.github.io/practice/beginner/object-namespace_resourcequota_limitrange/</link>
      <pubDate>Wed, 06 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/practice/beginner/object-namespace_resourcequota_limitrange/</guid>
      <description>1. Namespace  1-1) Namespace apiVersion: v1 kind: Namespace metadata: name: nm-1  1-2) Pod apiVersion: v1 kind: Pod metadata: name: pod-1 namespace: nm-1 labels: app: pod spec: containers: - name: container image: kubetm/app ports: - containerPort: 8080  1-3) Service apiVersion: v1 kind: Service metadata: name: svc-1 namespace: nm-1 spec: selector: app: pod ports: - port: 9000 targetPort: 8080  
1-1&amp;rsquo;) Namespace apiVersion: v1 kind: Namespace metadata: name: nm-2  1-2&amp;rsquo;) Pod apiVersion: v1 kind: Pod metadata: name: pod-1 namespace: nm-2 labels: app: pod spec: containers: - name: container image: kubetm/init ports: - containerPort: 8080</description>
    </item>
    
    <item>
      <title>ConfigMap, Secret</title>
      <link>https://kubetm.github.io/practice/beginner/object-configmap_secret/</link>
      <pubDate>Tue, 05 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/practice/beginner/object-configmap_secret/</guid>
      <description>1. Env (Literal)  1-1) ConfigMap apiVersion: v1 kind: ConfigMap metadata: name: cm-dev data: SSH: &#39;false&#39; User: dev  1-2) Secret apiVersion: v1 kind: Secret metadata: name: sec-dev data: Key: MTIzNA==  1-3) Pod apiVersion: v1 kind: Pod metadata: name: pod-1 spec: containers: - name: container image: kubetm/init envFrom: - configMapRef: name: cm-dev - secretRef: name: sec-dev   
2. Env (File)  2-1) Configmap echo &amp;quot;Content&amp;quot; &amp;gt;&amp;gt; file-c.</description>
    </item>
    
    <item>
      <title>Volume</title>
      <link>https://kubetm.github.io/practice/beginner/object-volume/</link>
      <pubDate>Mon, 04 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/practice/beginner/object-volume/</guid>
      <description>1. emptyDir  1-1) Pod apiVersion: v1 kind: Pod metadata: name: pod-volume-1 spec: containers: - name: container1 image: kubetm/init volumeMounts: - name: empty-dir mountPath: /mount1 - name: container2 image: kubetm/init volumeMounts: - name: empty-dir mountPath: /mount2 volumes: - name : empty-dir emptyDir: {}  mount | grep mount1 echo &amp;quot;file context&amp;quot; &amp;gt;&amp;gt; file.txt   
2. hostPath  2-1) Pod apiVersion: v1 kind: Pod metadata: name: pod-volume-3 spec: nodeSelector: kubernetes.</description>
    </item>
    
    <item>
      <title>Service</title>
      <link>https://kubetm.github.io/practice/beginner/object-service/</link>
      <pubDate>Sun, 03 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/practice/beginner/object-service/</guid>
      <description>1. ClusterIP  1-1) Pod apiVersion: v1 kind: Pod metadata: name: pod-1 labels: app: pod spec: nodeSelector: kubernetes.io/hostname: k8s-node1 containers: - name: container image: kubetm/app ports: - containerPort: 8080  1-2) Service apiVersion: v1 kind: Service metadata: name: svc-1 spec: selector: app: pod ports: - port: 9000 targetPort: 8080  curl 10.104.103.107:9000/hostname   
2. NodePort  Service apiVersion: v1 kind: Service metadata: name: svc-2 spec: selector: app: pod ports: - port: 9000 targetPort: 8080 nodePort: 30000 type: NodePort externalTrafficPolicy: Local  3.</description>
    </item>
    
    <item>
      <title>Pod</title>
      <link>https://kubetm.github.io/practice/beginner/object-pod/</link>
      <pubDate>Sat, 02 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/practice/beginner/object-pod/</guid>
      <description>1. Container  1-1) Pod apiVersion: v1 kind: Pod metadata: name: pod-1 spec: containers: - name: container1 image: kubetm/p8000 ports: - containerPort: 8000 - name: container2 image: kubetm/p8080 ports: - containerPort: 8080  1-2) ReplicationController apiVersion: v1 kind: ReplicationController metadata: name: replication-1 spec: replicas: 1 selector: app: rc template: metadata: name: pod-1 labels: app: rc spec: containers: - name: container image: kubetm/init   
2. Label  2-1) Pod apiVersion: v1 kind: Pod metadata: name: pod-2 labels: type: web lo: dev spec: containers: - name: container image: kubetm/init  2-2) Service apiVersion: v1 kind: Service metadata: name: svc-1 spec: selector: type: web ports: - port: 8080</description>
    </item>
    
    <item>
      <title>11월 진행사항</title>
      <link>https://kubetm.github.io/plan/2019_11/</link>
      <pubDate>Fri, 01 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/plan/2019_11/</guid>
      <description>-29일- [중급편] Volume - Dynamic Provisioning, StorageClass, Status, ReclaimPolicy PPT 100% Blog 100% Recording 50%
 이론강의 제작 및 Inflearn 업로드   [초급편] Blog 실습자료 내용 보강  Pod  
-28일- [중급편] Volume - Dynamic Provisioning, StorageClass, Status, ReclaimPolicy PPT 100% Blog 100% Recording 20%
 이론 강의 스크립트 정리  Blog 강의 히스토리 항목 추가  히스토리 내용 정리 (11월)  
-27일- [중급편] Volume - Dynamic Provisioning, StorageClass, Status, ReclaimPolicy PPT 100% Blog 100% Recording 0%</description>
    </item>
    
    <item>
      <title>Getting-started Kubernetes</title>
      <link>https://kubetm.github.io/practice/beginner/gettingstarted-kubernetes/</link>
      <pubDate>Fri, 01 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/practice/beginner/gettingstarted-kubernetes/</guid>
      <description>1. Linux  1-1) hello.js var http = require(&#39;http&#39;); var content = function(req, resp) { resp.end(&amp;quot;Hello Kubernetes!&amp;quot; + &amp;quot;\n&amp;quot;); resp.writeHead(200); } var w = http.createServer(content); w.listen(8000);  node hello.js   
2. Docker  2-1) Dockerfile FROM node:slim EXPOSE 8000 COPY hello.js . CMD node hello.js  2-2) Docker Hub Site https://hub.docker.com/
2-3) Docker Container Run docker build -t kubetm/hello . -t : 레파지토리/이미지명:버전 docker images docker run -d -p 8100:8000 kubetm/hello -d : 백그라운드 모드 -p : 포트변경 docker ps docker exec -it c403442e8a59 /bin/bash  2-4) Docker Image Push docker login docker push kubetm/hello</description>
    </item>
    
    <item>
      <title>10월 진행사항</title>
      <link>https://kubetm.github.io/plan/2019_10/</link>
      <pubDate>Tue, 01 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/plan/2019_10/</guid>
      <description>-31일- [부록 (설치)] Case2 [내PC+VirtualBox] 실습 PPT 100% Test 100% Recording 0%
 강의자료 정리 및 테스트 완료  [부록 (설치)] Case2 [내PC+VirtualBox] PPT 100% Recording 100%
 강의 자료준비 및 영상제작완료  [부록 (설치)] Case1 [서버전용] 실습 PPT 100% Test 100% Recording 100%
 Dahsboard 설치 부분 재녹음  
-30일- [부록 (설치)] Kubernetes 설치 개요 PPT 100% Recording 100%
 영상제작 완료  [부록 (설치)] Case1 [서버전용] 실습 PPT 100% Recording 100%</description>
    </item>
    
    <item>
      <title>9월 진행사항</title>
      <link>https://kubetm.github.io/plan/2019_09/</link>
      <pubDate>Sun, 01 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/plan/2019_09/</guid>
      <description>-30일- [중급편] Pod - Lifecycle PPT 100% Recording 20%
 강의할 PPT 자료 및 내용 정리 완료 녹음 준비   
-27일- [중급편] Pod - Lifecycle PPT 80% Recording 0%
 강의할 PPT 자료 및 내용 정리   
-25일- [부록] Kubernetes 설치 개요 PPT 120% Github 100% Test 100% Recording 100%
 실습영상 편집 후 업로드  
-24일- [부록] Kubernetes 설치 개요 PPT 120% Github 100% Test 100% Recording 80%</description>
    </item>
    
    <item>
      <title>CKA 시험 공부 1</title>
      <link>https://kubetm.github.io/practice/cka/exam1/</link>
      <pubDate>Sun, 16 Apr 2000 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/practice/cka/exam1/</guid>
      <description>사전 작업 node-1에 kubectl 명령 자동완성 설정
https://v1-18.docs.kubernetes.io/docs/reference/kubectl/cheatsheet/#kubectl-autocomplete
source &amp;lt;(kubectl completion bash) echo &amp;quot;source &amp;lt;(kubectl completion bash)&amp;quot; &amp;gt;&amp;gt; ~/.bashrc  alias k=kubectl complete -F __start_kubectl k   
k8s Cluster - 17문항 k8s cluster에서 작업하는 문제 (아래 명령어는 문제에서도 알려줌)
kubectl config use-context k8s   
Pod에서 특정 Error Log 문자열만 출력해서 파일 저장 사전환경
cat &amp;lt;&amp;lt;EOF | kubectl create -f - apiVersion: v1 kind: Pod metadata: name: poo spec: containers: - name: container image: kubetm/init command: [&#39;sh&#39;, &#39;-c&#39;, &#39;echo Hello Kubernetes ; echo error-message; echo end; sleep 1000&#39;] EOF  문제풀이</description>
    </item>
    
    <item>
      <title>CKA 시험 공부 2</title>
      <link>https://kubetm.github.io/practice/cka/exam2/</link>
      <pubDate>Sun, 16 Apr 2000 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/practice/cka/exam2/</guid>
      <description>Node-1 별도 Cluster의 접근 없이 node-1에서 주어진 문제 풀이
Etcd 스냅샷을 하는데 TLS를 이용  Endpoint : https:127.0.0.1:2379 Path : /snapshot/etcd.db Version : 3.2.12 CA : /tls/ca.crt, Client Cert : /tls/client.crt, Client Key : /tls/client.key  문제풀이
https://v1-18.docs.kubernetes.io/docs/tasks/administer-cluster/configure-upgrade-etcd/#built-in-snapshot
ETCDCTL_API=3 etcdctl --endpoints https://127.0.0.1:2379 --cacert /tls/ca.crt --cert /tls/client.crt --key /tls/client.key snapshot save /snapshot/etcd.db ETCDCTL_API=3 etcdctl --write-out=table snapshot status /snapshot/etcd.db  내 Cluster에서 해볼려면..
cd /etc/kubernetes/pki/etcd 에 있는 ca.crt, server.crt, server.</description>
    </item>
    
    <item>
      <title>Component Architecture</title>
      <link>https://kubetm.github.io/practice/architecture/component-difm-diadf-9aa/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/practice/architecture/component-difm-diadf-9aa/</guid>
      <description>  해당강의는 실습은 없고, 이론 강의 자료를 다운 받으실 수 있습니다. 
Referenece * Kubernetes  Kubernetes Components : https://kubernetes.io/ko/docs/concepts/overview/components/   * Others  A Closer Look at Etcd: The Brain of a Kubernetes Cluster : https://medium.com/better-programming/a-closer-look-at-etcd-the-brain-of-a-kubernetes-cluster-788c8ea759a5 Kubernetes Architecture : https://www.slideshare.net/harryzhang735/kubernetes-beyond-a-black-box-part-1  </description>
    </item>
    
    <item>
      <title>Logging/Monitoring Architecture</title>
      <link>https://kubetm.github.io/practice/architecture/logging-difm-diadf-9aa/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/practice/architecture/logging-difm-diadf-9aa/</guid>
      <description>1. Basic Logging Construction  1-1) Deployment 생성 apiVersion: apps/v1 kind: Deployment metadata: name: app-log spec: selector: matchLabels: type: app template: metadata: labels: type: app spec: nodeSelector: kubernetes.io/hostname: k8s-node1 containers: - name: container image: kubetm/app  api 호출
curl &amp;lt;pod-ip&amp;gt;:8080/hostname curl &amp;lt;pod-ip&amp;gt;:8080/version  
1-2) Container Log 확인 kubectl exec로 Container 내부 로그파일 확인
kubectl exec &amp;lt;pod-name&amp;gt; -it -- /bin/sh  
kubectl logs로 Stdout 로그 확인
kubectl logs &amp;lt;pod-name&amp;gt; kubectl logs &amp;lt;pod-name&amp;gt; --tail 10 --follow</description>
    </item>
    
    <item>
      <title>Networking Architecture</title>
      <link>https://kubetm.github.io/practice/architecture/networking-difm-diadf-9aa/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/practice/architecture/networking-difm-diadf-9aa/</guid>
      <description>1. Pod Network - Pause Container  1-1) Pause Container apiVersion: v1 kind: Pod metadata: name: pod-pause spec: nodeSelector: kubernetes.io/hostname: k8s-node1 containers: - name: container1 image: kubetm/p8000 ports: - containerPort: 8000 - name: container2 image: kubetm/p8080 ports: - containerPort: 8080  Pause Container 확인
docker ps | grep pod-pause  Pause Container 인터페이스 확인
docker ps | grep pod-pause docker inspect &amp;lt;container-id&amp;gt; -f &amp;quot;{{json .NetworkSettings}}&amp;quot; sudo ln -s /var/run/docker/netns /var/run/netns ip netns exec &amp;lt;SandboxKey&amp;gt; ip a</description>
    </item>
    
    <item>
      <title>Storage Architecture</title>
      <link>https://kubetm.github.io/practice/architecture/storage-difm-diadf-9aa/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/practice/architecture/storage-difm-diadf-9aa/</guid>
      <description>1. FTP Server 구축 1-1) NFS 패키지 다운 및 설치 설치
yum -y install nfs-utils rpcbind systemctl start rpcbind systemctl start nfs-server systemctl start rpc-statd systemctl enable rpcbind systemctl enable nfs-server  확인
systemctl status nfs-server  
1-2) 공유 폴더 생성 및 설정 공유 폴더 생성
mkdir /share-data chmod 777 /share-data  vi /etc/exports 로 아래 내용 입력 후 저장
/share-data *(rw,sync,no_root_squash)  반영
exportfs -r  방화벽 해제 및 NFS Server재시작</description>
    </item>
    
  </channel>
</rss>