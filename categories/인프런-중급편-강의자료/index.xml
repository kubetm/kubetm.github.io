<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>인프런 중급편 강의자료 on KubeTM Blog with Kubernetes</title>
    <link>https://kubetm.github.io/categories/%EC%9D%B8%ED%94%84%EB%9F%B0-%EC%A4%91%EA%B8%89%ED%8E%B8-%EA%B0%95%EC%9D%98%EC%9E%90%EB%A3%8C/</link>
    <description>Recent content in 인프런 중급편 강의자료 on KubeTM Blog with Kubernetes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 24 Dec 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://kubetm.github.io/categories/%EC%9D%B8%ED%94%84%EB%9F%B0-%EC%A4%91%EA%B8%89%ED%8E%B8-%EA%B0%95%EC%9D%98%EC%9E%90%EB%A3%8C/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>StatefulSet</title>
      <link>https://kubetm.github.io/practice/intermediate/new-statefulset/</link>
      <pubDate>Tue, 24 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/practice/intermediate/new-statefulset/</guid>
      <description>1. ReadinessProbe  1-1) Service apiVersion: v1 kind: Service metadata: name: svc-readiness spec: selector: app: readiness ports: - port: 8080 targetPort: 8080  1-2) Pod apiVersion: v1 kind: Pod metadata: name: pod1 labels: app: readiness spec: containers: - name: container image: kubetm/app ports: - containerPort: 8080	terminationGracePeriodSeconds: 0  while true; do date &amp;amp;&amp;amp; curl 10.97.190.80:8080/hostname; sleep 1; done  1-3) Pod apiVersion: v1 kind: Pod metadata: name: pod-readiness-exec1 labels: app: readiness spec: containers: - name: readiness image: kubetm/app ports: - containerPort: 8080	readinessProbe: exec: command: [&amp;quot;cat&amp;quot;, &amp;quot;/readiness/ready.</description>
    </item>
    
    <item>
      <title>Pod</title>
      <link>https://kubetm.github.io/practice/intermediate/pod-probe/</link>
      <pubDate>Mon, 16 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/practice/intermediate/pod-probe/</guid>
      <description>1. ReadinessProbe  1-1) Service apiVersion: v1 kind: Service metadata: name: svc-readiness spec: selector: app: readiness ports: - port: 8080 targetPort: 8080  1-2) Pod apiVersion: v1 kind: Pod metadata: name: pod1 labels: app: readiness spec: containers: - name: container image: kubetm/app ports: - containerPort: 8080	terminationGracePeriodSeconds: 0  while true; do date &amp;amp;&amp;amp; curl 10.97.190.80:8080/hostname; sleep 1; done  1-3) Pod apiVersion: v1 kind: Pod metadata: name: pod-readiness-exec1 labels: app: readiness spec: containers: - name: readiness image: kubetm/app ports: - containerPort: 8080	readinessProbe: exec: command: [&amp;quot;cat&amp;quot;, &amp;quot;/readiness/ready.</description>
    </item>
    
    <item>
      <title>Volume</title>
      <link>https://kubetm.github.io/practice/intermediate/object-volume/</link>
      <pubDate>Thu, 21 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/practice/intermediate/object-volume/</guid>
      <description>1. 사전 구성 - StorageOS 설치 및 StorageClass 생성  1-1) StorageOS Operator 설치 설치
kubectl apply -f https://github.com/storageos/cluster-operator/releases/download/1.5.0/storageos-operator.yaml  설치 확인
kubectl get all -n storageos-operator  Depolyment 수정
kubectl edit deployments.apps storageos-cluster-operator -n storageos-operator  spec.containers.env의 DISABLE_SCHEDULER_WEBHOOK의 Value를 true로 설정
spec: containers: - command: - cluster-operator env: - name: DISABLE_SCHEDULER_WEBHOOK value: &amp;quot;false&amp;quot; # true 로 변경 image: storageos/cluster-operator:1.5.0 imagePullPolicy: IfNotPresent  관리 계정을 위한 Secret 생성 (username 및 password를 Base64문자로 만들기)</description>
    </item>
    
    <item>
      <title>Service</title>
      <link>https://kubetm.github.io/practice/intermediate/object-service/</link>
      <pubDate>Sat, 16 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kubetm.github.io/practice/intermediate/object-service/</guid>
      <description>Dns  Headless  Exteranl   
Headless  1-1) Service apiVersion: v1 kind: Service metadata: name: clusterip1 spec: selector: svc: clusterip ports: - port: 80 targetPort: 8080  1-2) Pod apiVersion: v1 kind: Pod metadata: name: pod1 labels: svc: clusterip spec: containers: - name: container image: kubetm/app  1-3) Request Pod apiVersion: v1 kind: Pod metadata: name: request-pod spec: containers: - name: container image: kubetm/init  kubectl exec request-pod -it /bin/bash  nslookup</description>
    </item>
    
  </channel>
</rss>